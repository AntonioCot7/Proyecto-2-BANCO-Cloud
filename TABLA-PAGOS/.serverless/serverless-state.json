{
  "service": {
    "service": "api-pagos",
    "serviceObject": {
      "name": "api-pagos"
    },
    "provider": {
      "name": "aws",
      "runtime": "python3.12",
      "memorySize": 1024,
      "timeout": 30,
      "iam": {
        "role": "arn:aws:iam::316129865556:role/LabRole"
      },
      "environment": {
        "PAGOS_TABLE": "TABLA-PAGOS"
      },
      "stage": "dev",
      "region": "us-east-1",
      "versionFunctions": true,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "CrearPagoDeudaLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/api-pagos-dev-CrearPagoDeuda"
            }
          },
          "CrearPagoServicioLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/api-pagos-dev-CrearPagoServicio"
            }
          },
          "RealizarPagoLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/api-pagos-dev-RealizarPago"
            }
          },
          "ObtenerPagoLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/api-pagos-dev-ObtenerPago"
            }
          },
          "ListarPagosLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/api-pagos-dev-ListarPagos"
            }
          },
          "ActualizarPagoLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/api-pagos-dev-ActualizarPago"
            }
          },
          "EliminarPagoLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/api-pagos-dev-EliminarPago"
            }
          },
          "CrearPagoDeudaLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-us-east-1-3b51566d-90f3",
                "S3Key": "serverless/api-pagos/dev/1732029626089-2024-11-19T15:20:26.089Z/api-pagos.zip"
              },
              "Handler": "CrearPagoDeuda.lambda_handler",
              "Runtime": "python3.12",
              "FunctionName": "api-pagos-dev-CrearPagoDeuda",
              "MemorySize": 1024,
              "Timeout": 30,
              "Environment": {
                "Variables": {
                  "PAGOS_TABLE": "TABLA-PAGOS"
                }
              },
              "Role": "arn:aws:iam::316129865556:role/LabRole"
            },
            "DependsOn": [
              "CrearPagoDeudaLogGroup"
            ]
          },
          "CrearPagoServicioLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-us-east-1-3b51566d-90f3",
                "S3Key": "serverless/api-pagos/dev/1732029626089-2024-11-19T15:20:26.089Z/api-pagos.zip"
              },
              "Handler": "CrearPagoServicio.lambda_handler",
              "Runtime": "python3.12",
              "FunctionName": "api-pagos-dev-CrearPagoServicio",
              "MemorySize": 1024,
              "Timeout": 30,
              "Environment": {
                "Variables": {
                  "PAGOS_TABLE": "TABLA-PAGOS"
                }
              },
              "Role": "arn:aws:iam::316129865556:role/LabRole"
            },
            "DependsOn": [
              "CrearPagoServicioLogGroup"
            ]
          },
          "RealizarPagoLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-us-east-1-3b51566d-90f3",
                "S3Key": "serverless/api-pagos/dev/1732029626089-2024-11-19T15:20:26.089Z/api-pagos.zip"
              },
              "Handler": "RealizarPago.lambda_handler",
              "Runtime": "python3.12",
              "FunctionName": "api-pagos-dev-RealizarPago",
              "MemorySize": 1024,
              "Timeout": 30,
              "Environment": {
                "Variables": {
                  "PAGOS_TABLE": "TABLA-PAGOS"
                }
              },
              "Role": "arn:aws:iam::316129865556:role/LabRole"
            },
            "DependsOn": [
              "RealizarPagoLogGroup"
            ]
          },
          "ObtenerPagoLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-us-east-1-3b51566d-90f3",
                "S3Key": "serverless/api-pagos/dev/1732029626089-2024-11-19T15:20:26.089Z/api-pagos.zip"
              },
              "Handler": "ObtenerPago.lambda_handler",
              "Runtime": "python3.12",
              "FunctionName": "api-pagos-dev-ObtenerPago",
              "MemorySize": 1024,
              "Timeout": 30,
              "Environment": {
                "Variables": {
                  "PAGOS_TABLE": "TABLA-PAGOS"
                }
              },
              "Role": "arn:aws:iam::316129865556:role/LabRole"
            },
            "DependsOn": [
              "ObtenerPagoLogGroup"
            ]
          },
          "ListarPagosLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-us-east-1-3b51566d-90f3",
                "S3Key": "serverless/api-pagos/dev/1732029626089-2024-11-19T15:20:26.089Z/api-pagos.zip"
              },
              "Handler": "ListarPagos.lambda_handler",
              "Runtime": "python3.12",
              "FunctionName": "api-pagos-dev-ListarPagos",
              "MemorySize": 1024,
              "Timeout": 30,
              "Environment": {
                "Variables": {
                  "PAGOS_TABLE": "TABLA-PAGOS"
                }
              },
              "Role": "arn:aws:iam::316129865556:role/LabRole"
            },
            "DependsOn": [
              "ListarPagosLogGroup"
            ]
          },
          "ActualizarPagoLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-us-east-1-3b51566d-90f3",
                "S3Key": "serverless/api-pagos/dev/1732029626089-2024-11-19T15:20:26.089Z/api-pagos.zip"
              },
              "Handler": "ActualizarPago.lambda_handler",
              "Runtime": "python3.12",
              "FunctionName": "api-pagos-dev-ActualizarPago",
              "MemorySize": 1024,
              "Timeout": 30,
              "Environment": {
                "Variables": {
                  "PAGOS_TABLE": "TABLA-PAGOS"
                }
              },
              "Role": "arn:aws:iam::316129865556:role/LabRole"
            },
            "DependsOn": [
              "ActualizarPagoLogGroup"
            ]
          },
          "EliminarPagoLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-us-east-1-3b51566d-90f3",
                "S3Key": "serverless/api-pagos/dev/1732029626089-2024-11-19T15:20:26.089Z/api-pagos.zip"
              },
              "Handler": "EliminarPago.lambda_handler",
              "Runtime": "python3.12",
              "FunctionName": "api-pagos-dev-EliminarPago",
              "MemorySize": 1024,
              "Timeout": 30,
              "Environment": {
                "Variables": {
                  "PAGOS_TABLE": "TABLA-PAGOS"
                }
              },
              "Role": "arn:aws:iam::316129865556:role/LabRole"
            },
            "DependsOn": [
              "EliminarPagoLogGroup"
            ]
          },
          "CrearPagoDeudaLambdaVersionyEtwO04n84kZsxSjgYTyMzViSgssYMQKQdlgDblw8": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "CrearPagoDeudaLambdaFunction"
              },
              "CodeSha256": "Co1Iyrolc25MRX9YqQ9WCSgunjANoUpHb5yI/ZlLGhA="
            }
          },
          "CrearPagoServicioLambdaVersionqk0F7tZ1nZjiuU703VbtLQJQ1H03YjqPTKCBSNxnMU": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "CrearPagoServicioLambdaFunction"
              },
              "CodeSha256": "Co1Iyrolc25MRX9YqQ9WCSgunjANoUpHb5yI/ZlLGhA="
            }
          },
          "RealizarPagoLambdaVersionYxGX05xIWiS4vDZBvYAHVlf8MaRe3CHA3cVvV9fyM": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "RealizarPagoLambdaFunction"
              },
              "CodeSha256": "Co1Iyrolc25MRX9YqQ9WCSgunjANoUpHb5yI/ZlLGhA="
            }
          },
          "ObtenerPagoLambdaVersionAVxNtkzVpb8HhJj1HjQvdTDuLY6jL1FEvi70lQJvhg": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "ObtenerPagoLambdaFunction"
              },
              "CodeSha256": "Co1Iyrolc25MRX9YqQ9WCSgunjANoUpHb5yI/ZlLGhA="
            }
          },
          "ListarPagosLambdaVersion9DFsAhS9J3QdxCcgcAgiRMRq2AJIfwjnODcQMKoo4Y": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "ListarPagosLambdaFunction"
              },
              "CodeSha256": "Co1Iyrolc25MRX9YqQ9WCSgunjANoUpHb5yI/ZlLGhA="
            }
          },
          "ActualizarPagoLambdaVersionHrCu3Y81LFzA41TX55QP6Nk23gxxnIzGGACfwYSak": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "ActualizarPagoLambdaFunction"
              },
              "CodeSha256": "Co1Iyrolc25MRX9YqQ9WCSgunjANoUpHb5yI/ZlLGhA="
            }
          },
          "EliminarPagoLambdaVersionlzLWoXM0X5lOnOHDPROaRMAYJkTB304Y7wio6Gms": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "EliminarPagoLambdaFunction"
              },
              "CodeSha256": "Co1Iyrolc25MRX9YqQ9WCSgunjANoUpHb5yI/ZlLGhA="
            }
          },
          "ApiGatewayRestApi": {
            "Type": "AWS::ApiGateway::RestApi",
            "Properties": {
              "Name": "dev-api-pagos",
              "EndpointConfiguration": {
                "Types": [
                  "EDGE"
                ]
              },
              "Policy": ""
            }
          },
          "ApiGatewayResourcePago": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "pago",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourcePagoDeuda": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourcePago"
              },
              "PathPart": "deuda",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourcePagoServicio": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourcePago"
              },
              "PathPart": "servicio",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourcePagoRealizar": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourcePago"
              },
              "PathPart": "realizar",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourcePagoObtener": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourcePago"
              },
              "PathPart": "obtener",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourcePagoListar": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourcePago"
              },
              "PathPart": "listar",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourcePagoActualizar": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourcePago"
              },
              "PathPart": "actualizar",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourcePagoEliminar": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourcePago"
              },
              "PathPart": "eliminar",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodPagoDeudaOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'*'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
                    },
                    "ResponseTemplates": {
                      "application/json": ""
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourcePagoDeuda"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodPagoServicioOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'*'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
                    },
                    "ResponseTemplates": {
                      "application/json": ""
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourcePagoServicio"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodPagoRealizarOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'*'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
                    },
                    "ResponseTemplates": {
                      "application/json": ""
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourcePagoRealizar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodPagoObtenerOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'*'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
                    },
                    "ResponseTemplates": {
                      "application/json": ""
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourcePagoObtener"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodPagoListarOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'*'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
                    },
                    "ResponseTemplates": {
                      "application/json": ""
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourcePagoListar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodPagoActualizarOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'*'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,PUT'"
                    },
                    "ResponseTemplates": {
                      "application/json": ""
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourcePagoActualizar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodPagoEliminarOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'*'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,DELETE'"
                    },
                    "ResponseTemplates": {
                      "application/json": ""
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourcePagoEliminar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodPagoDeudaPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourcePagoDeuda"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "CrearPagoDeudaLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "CrearPagoDeudaLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodPagoServicioPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourcePagoServicio"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "CrearPagoServicioLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "CrearPagoServicioLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodPagoRealizarPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourcePagoRealizar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "RealizarPagoLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "RealizarPagoLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodPagoObtenerPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourcePagoObtener"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "ObtenerPagoLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "ObtenerPagoLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodPagoListarPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourcePagoListar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "ListarPagosLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "ListarPagosLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodPagoActualizarPut": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "PUT",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourcePagoActualizar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "ActualizarPagoLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "ActualizarPagoLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodPagoEliminarDelete": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "DELETE",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourcePagoEliminar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "EliminarPagoLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "EliminarPagoLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayDeployment1732029621708": {
            "Type": "AWS::ApiGateway::Deployment",
            "Properties": {
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "StageName": "dev"
            },
            "DependsOn": [
              "ApiGatewayMethodPagoDeudaOptions",
              "ApiGatewayMethodPagoServicioOptions",
              "ApiGatewayMethodPagoRealizarOptions",
              "ApiGatewayMethodPagoObtenerOptions",
              "ApiGatewayMethodPagoListarOptions",
              "ApiGatewayMethodPagoActualizarOptions",
              "ApiGatewayMethodPagoEliminarOptions",
              "ApiGatewayMethodPagoDeudaPost",
              "ApiGatewayMethodPagoServicioPost",
              "ApiGatewayMethodPagoRealizarPost",
              "ApiGatewayMethodPagoObtenerPost",
              "ApiGatewayMethodPagoListarPost",
              "ApiGatewayMethodPagoActualizarPut",
              "ApiGatewayMethodPagoEliminarDelete"
            ]
          },
          "CrearPagoDeudaLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "CrearPagoDeudaLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "CrearPagoServicioLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "CrearPagoServicioLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "RealizarPagoLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "RealizarPagoLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "ObtenerPagoLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "ObtenerPagoLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "ListarPagosLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "ListarPagosLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "ActualizarPagoLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "ActualizarPagoLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "EliminarPagoLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "EliminarPagoLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "PagosTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "TableName": "TABLA-PAGOS",
              "AttributeDefinitions": [
                {
                  "AttributeName": "usuario_id",
                  "AttributeType": "S"
                },
                {
                  "AttributeName": "pago_id",
                  "AttributeType": "S"
                },
                {
                  "AttributeName": "tipo",
                  "AttributeType": "S"
                },
                {
                  "AttributeName": "fecha",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "usuario_id",
                  "KeyType": "HASH"
                },
                {
                  "AttributeName": "pago_id",
                  "KeyType": "RANGE"
                }
              ],
              "BillingMode": "PAY_PER_REQUEST",
              "StreamSpecification": {
                "StreamViewType": "NEW_AND_OLD_IMAGES"
              },
              "GlobalSecondaryIndexes": [
                {
                  "IndexName": "TipoIndex",
                  "KeySchema": [
                    {
                      "AttributeName": "usuario_id",
                      "KeyType": "HASH"
                    },
                    {
                      "AttributeName": "tipo",
                      "KeyType": "RANGE"
                    }
                  ],
                  "Projection": {
                    "ProjectionType": "ALL"
                  }
                }
              ],
              "LocalSecondaryIndexes": [
                {
                  "IndexName": "FechaIndex",
                  "KeySchema": [
                    {
                      "AttributeName": "usuario_id",
                      "KeyType": "HASH"
                    },
                    {
                      "AttributeName": "fecha",
                      "KeyType": "RANGE"
                    }
                  ],
                  "Projection": {
                    "ProjectionType": "ALL"
                  }
                }
              ]
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": "serverless-framework-deployments-us-east-1-3b51566d-90f3",
            "Export": {
              "Name": "sls-api-pagos-dev-ServerlessDeploymentBucketName"
            }
          },
          "CrearPagoDeudaLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "CrearPagoDeudaLambdaVersionyEtwO04n84kZsxSjgYTyMzViSgssYMQKQdlgDblw8"
            },
            "Export": {
              "Name": "sls-api-pagos-dev-CrearPagoDeudaLambdaFunctionQualifiedArn"
            }
          },
          "CrearPagoServicioLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "CrearPagoServicioLambdaVersionqk0F7tZ1nZjiuU703VbtLQJQ1H03YjqPTKCBSNxnMU"
            },
            "Export": {
              "Name": "sls-api-pagos-dev-CrearPagoServicioLambdaFunctionQualifiedArn"
            }
          },
          "RealizarPagoLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "RealizarPagoLambdaVersionYxGX05xIWiS4vDZBvYAHVlf8MaRe3CHA3cVvV9fyM"
            },
            "Export": {
              "Name": "sls-api-pagos-dev-RealizarPagoLambdaFunctionQualifiedArn"
            }
          },
          "ObtenerPagoLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "ObtenerPagoLambdaVersionAVxNtkzVpb8HhJj1HjQvdTDuLY6jL1FEvi70lQJvhg"
            },
            "Export": {
              "Name": "sls-api-pagos-dev-ObtenerPagoLambdaFunctionQualifiedArn"
            }
          },
          "ListarPagosLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "ListarPagosLambdaVersion9DFsAhS9J3QdxCcgcAgiRMRq2AJIfwjnODcQMKoo4Y"
            },
            "Export": {
              "Name": "sls-api-pagos-dev-ListarPagosLambdaFunctionQualifiedArn"
            }
          },
          "ActualizarPagoLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "ActualizarPagoLambdaVersionHrCu3Y81LFzA41TX55QP6Nk23gxxnIzGGACfwYSak"
            },
            "Export": {
              "Name": "sls-api-pagos-dev-ActualizarPagoLambdaFunctionQualifiedArn"
            }
          },
          "EliminarPagoLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "EliminarPagoLambdaVersionlzLWoXM0X5lOnOHDPROaRMAYJkTB304Y7wio6Gms"
            },
            "Export": {
              "Name": "sls-api-pagos-dev-EliminarPagoLambdaFunctionQualifiedArn"
            }
          },
          "ServiceEndpoint": {
            "Description": "URL of the service endpoint",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  ".execute-api.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix"
                  },
                  "/dev"
                ]
              ]
            },
            "Export": {
              "Name": "sls-api-pagos-dev-ServiceEndpoint"
            }
          }
        }
      },
      "vpc": {}
    },
    "pluginsData": {},
    "functions": {
      "CrearPagoDeuda": {
        "handler": "CrearPagoDeuda.lambda_handler",
        "events": [
          {
            "http": {
              "path": "pago/deuda",
              "method": "post",
              "cors": {
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "POST"
                ],
                "headers": [
                  "Content-Type",
                  "X-Amz-Date",
                  "Authorization",
                  "X-Api-Key",
                  "X-Amz-Security-Token",
                  "X-Amz-User-Agent",
                  "X-Amzn-Trace-Id"
                ],
                "allowCredentials": false
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "api-pagos-dev-CrearPagoDeuda",
        "package": {},
        "memory": 1024,
        "timeout": 30,
        "runtime": "python3.12",
        "vpc": {},
        "versionLogicalId": "CrearPagoDeudaLambdaVersionyEtwO04n84kZsxSjgYTyMzViSgssYMQKQdlgDblw8"
      },
      "CrearPagoServicio": {
        "handler": "CrearPagoServicio.lambda_handler",
        "events": [
          {
            "http": {
              "path": "pago/servicio",
              "method": "post",
              "cors": {
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "POST"
                ],
                "headers": [
                  "Content-Type",
                  "X-Amz-Date",
                  "Authorization",
                  "X-Api-Key",
                  "X-Amz-Security-Token",
                  "X-Amz-User-Agent",
                  "X-Amzn-Trace-Id"
                ],
                "allowCredentials": false
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "api-pagos-dev-CrearPagoServicio",
        "package": {},
        "memory": 1024,
        "timeout": 30,
        "runtime": "python3.12",
        "vpc": {},
        "versionLogicalId": "CrearPagoServicioLambdaVersionqk0F7tZ1nZjiuU703VbtLQJQ1H03YjqPTKCBSNxnMU"
      },
      "RealizarPago": {
        "handler": "RealizarPago.lambda_handler",
        "events": [
          {
            "http": {
              "path": "pago/realizar",
              "method": "post",
              "cors": {
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "POST"
                ],
                "headers": [
                  "Content-Type",
                  "X-Amz-Date",
                  "Authorization",
                  "X-Api-Key",
                  "X-Amz-Security-Token",
                  "X-Amz-User-Agent",
                  "X-Amzn-Trace-Id"
                ],
                "allowCredentials": false
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "api-pagos-dev-RealizarPago",
        "package": {},
        "memory": 1024,
        "timeout": 30,
        "runtime": "python3.12",
        "vpc": {},
        "versionLogicalId": "RealizarPagoLambdaVersionYxGX05xIWiS4vDZBvYAHVlf8MaRe3CHA3cVvV9fyM"
      },
      "ObtenerPago": {
        "handler": "ObtenerPago.lambda_handler",
        "events": [
          {
            "http": {
              "path": "pago/obtener",
              "method": "post",
              "cors": {
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "POST"
                ],
                "headers": [
                  "Content-Type",
                  "X-Amz-Date",
                  "Authorization",
                  "X-Api-Key",
                  "X-Amz-Security-Token",
                  "X-Amz-User-Agent",
                  "X-Amzn-Trace-Id"
                ],
                "allowCredentials": false
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "api-pagos-dev-ObtenerPago",
        "package": {},
        "memory": 1024,
        "timeout": 30,
        "runtime": "python3.12",
        "vpc": {},
        "versionLogicalId": "ObtenerPagoLambdaVersionAVxNtkzVpb8HhJj1HjQvdTDuLY6jL1FEvi70lQJvhg"
      },
      "ListarPagos": {
        "handler": "ListarPagos.lambda_handler",
        "events": [
          {
            "http": {
              "path": "pago/listar",
              "method": "post",
              "cors": {
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "POST"
                ],
                "headers": [
                  "Content-Type",
                  "X-Amz-Date",
                  "Authorization",
                  "X-Api-Key",
                  "X-Amz-Security-Token",
                  "X-Amz-User-Agent",
                  "X-Amzn-Trace-Id"
                ],
                "allowCredentials": false
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "api-pagos-dev-ListarPagos",
        "package": {},
        "memory": 1024,
        "timeout": 30,
        "runtime": "python3.12",
        "vpc": {},
        "versionLogicalId": "ListarPagosLambdaVersion9DFsAhS9J3QdxCcgcAgiRMRq2AJIfwjnODcQMKoo4Y"
      },
      "ActualizarPago": {
        "handler": "ActualizarPago.lambda_handler",
        "events": [
          {
            "http": {
              "path": "pago/actualizar",
              "method": "put",
              "cors": {
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "PUT"
                ],
                "headers": [
                  "Content-Type",
                  "X-Amz-Date",
                  "Authorization",
                  "X-Api-Key",
                  "X-Amz-Security-Token",
                  "X-Amz-User-Agent",
                  "X-Amzn-Trace-Id"
                ],
                "allowCredentials": false
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "api-pagos-dev-ActualizarPago",
        "package": {},
        "memory": 1024,
        "timeout": 30,
        "runtime": "python3.12",
        "vpc": {},
        "versionLogicalId": "ActualizarPagoLambdaVersionHrCu3Y81LFzA41TX55QP6Nk23gxxnIzGGACfwYSak"
      },
      "EliminarPago": {
        "handler": "EliminarPago.lambda_handler",
        "events": [
          {
            "http": {
              "path": "pago/eliminar",
              "method": "delete",
              "cors": {
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "DELETE"
                ],
                "headers": [
                  "Content-Type",
                  "X-Amz-Date",
                  "Authorization",
                  "X-Api-Key",
                  "X-Amz-Security-Token",
                  "X-Amz-User-Agent",
                  "X-Amzn-Trace-Id"
                ],
                "allowCredentials": false
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "api-pagos-dev-EliminarPago",
        "package": {},
        "memory": 1024,
        "timeout": 30,
        "runtime": "python3.12",
        "vpc": {},
        "versionLogicalId": "EliminarPagoLambdaVersionlzLWoXM0X5lOnOHDPROaRMAYJkTB304Y7wio6Gms"
      }
    },
    "resources": {
      "Resources": {
        "PagosTable": {
          "Type": "AWS::DynamoDB::Table",
          "Properties": {
            "TableName": "TABLA-PAGOS",
            "AttributeDefinitions": [
              {
                "AttributeName": "usuario_id",
                "AttributeType": "S"
              },
              {
                "AttributeName": "pago_id",
                "AttributeType": "S"
              },
              {
                "AttributeName": "tipo",
                "AttributeType": "S"
              },
              {
                "AttributeName": "fecha",
                "AttributeType": "S"
              }
            ],
            "KeySchema": [
              {
                "AttributeName": "usuario_id",
                "KeyType": "HASH"
              },
              {
                "AttributeName": "pago_id",
                "KeyType": "RANGE"
              }
            ],
            "BillingMode": "PAY_PER_REQUEST",
            "StreamSpecification": {
              "StreamViewType": "NEW_AND_OLD_IMAGES"
            },
            "GlobalSecondaryIndexes": [
              {
                "IndexName": "TipoIndex",
                "KeySchema": [
                  {
                    "AttributeName": "usuario_id",
                    "KeyType": "HASH"
                  },
                  {
                    "AttributeName": "tipo",
                    "KeyType": "RANGE"
                  }
                ],
                "Projection": {
                  "ProjectionType": "ALL"
                }
              }
            ],
            "LocalSecondaryIndexes": [
              {
                "IndexName": "FechaIndex",
                "KeySchema": [
                  {
                    "AttributeName": "usuario_id",
                    "KeyType": "HASH"
                  },
                  {
                    "AttributeName": "fecha",
                    "KeyType": "RANGE"
                  }
                ],
                "Projection": {
                  "ProjectionType": "ALL"
                }
              }
            ]
          }
        }
      },
      "Outputs": {}
    },
    "configValidationMode": "warn",
    "serviceFilename": "serverless.yml",
    "initialServerlessConfig": {
      "org": "antoniocot",
      "service": "api-pagos",
      "provider": {
        "$ref": "$[\"service\"][\"provider\"]"
      },
      "functions": {
        "$ref": "$[\"service\"][\"functions\"]"
      },
      "resources": {
        "$ref": "$[\"service\"][\"resources\"]"
      }
    },
    "appId": null,
    "org": "antoniocot",
    "orgId": null,
    "layers": {},
    "artifact": "/home/ubuntu/Proyecto-2-BANCO-Cloud/TABLA-PAGOS/.serverless/api-pagos.zip"
  },
  "package": {
    "artifactDirectoryName": "serverless/api-pagos/dev/1732029626089-2024-11-19T15:20:26.089Z",
    "artifact": "api-pagos.zip"
  }
}