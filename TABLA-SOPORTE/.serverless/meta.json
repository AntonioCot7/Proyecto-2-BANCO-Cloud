{
  "/home/ubuntu/Proyecto-2-BANCO-Cloud/TABLA-SOPORTE": {
    "versionSfCore": null,
    "versionFramework": "4.4.10",
    "isWithinCompose": false,
    "isCompose": false,
    "composeOrgName": null,
    "composeResolverProviders": {
      "default-aws-credential-resolver": "<REDACTED>",
      "self": {
        "instance": {
          "credentials": "<REDACTED>",
          "serviceConfigFile": {
            "org": "antoniocot",
            "service": "api-soporte",
            "provider": {
              "name": "aws",
              "runtime": "python3.12",
              "memorySize": 1024,
              "timeout": 30,
              "iam": {
                "role": "arn:aws:iam::316129865556:role/LabRole"
              },
              "environment": {
                "SOPORTE_TABLE": "TABLA-SOPORTE"
              },
              "stage": "dev",
              "region": "us-east-1",
              "versionFunctions": true,
              "compiledCloudFormationTemplate": {
                "AWSTemplateFormatVersion": "2010-09-09",
                "Description": "The AWS CloudFormation template for this Serverless application",
                "Resources": {
                  "CrearSolicitudLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/api-soporte-dev-CrearSolicitud"
                    }
                  },
                  "EliminarSolicitudLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/api-soporte-dev-EliminarSolicitud"
                    }
                  },
                  "EditarSolicitudLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/api-soporte-dev-EditarSolicitud"
                    }
                  },
                  "ObtenerSolicitudLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/api-soporte-dev-ObtenerSolicitud"
                    }
                  },
                  "ListarSolicitudesLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/api-soporte-dev-ListarSolicitudes"
                    }
                  },
                  "ListarSolicitudesPorUsuarioLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/api-soporte-dev-ListarSolicitudesPorUsuario"
                    }
                  },
                  "ResponderSolicitudLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/api-soporte-dev-ResponderSolicitud"
                    }
                  },
                  "CrearSolicitudLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": "serverless-framework-deployments-us-east-1-3b51566d-90f3",
                        "S3Key": "serverless/api-soporte/dev/1732024147230-2024-11-19T13:49:07.230Z/api-soporte.zip"
                      },
                      "Handler": "CrearSolicitud.lambda_handler",
                      "Runtime": "python3.12",
                      "FunctionName": "api-soporte-dev-CrearSolicitud",
                      "MemorySize": 1024,
                      "Timeout": 30,
                      "Environment": {
                        "Variables": {
                          "SOPORTE_TABLE": "TABLA-SOPORTE"
                        }
                      },
                      "Role": "arn:aws:iam::316129865556:role/LabRole"
                    },
                    "DependsOn": [
                      "CrearSolicitudLogGroup"
                    ]
                  },
                  "EliminarSolicitudLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": "serverless-framework-deployments-us-east-1-3b51566d-90f3",
                        "S3Key": "serverless/api-soporte/dev/1732024147230-2024-11-19T13:49:07.230Z/api-soporte.zip"
                      },
                      "Handler": "EliminarSolicitud.lambda_handler",
                      "Runtime": "python3.12",
                      "FunctionName": "api-soporte-dev-EliminarSolicitud",
                      "MemorySize": 1024,
                      "Timeout": 30,
                      "Environment": {
                        "Variables": {
                          "SOPORTE_TABLE": "TABLA-SOPORTE"
                        }
                      },
                      "Role": "arn:aws:iam::316129865556:role/LabRole"
                    },
                    "DependsOn": [
                      "EliminarSolicitudLogGroup"
                    ]
                  },
                  "EditarSolicitudLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": "serverless-framework-deployments-us-east-1-3b51566d-90f3",
                        "S3Key": "serverless/api-soporte/dev/1732024147230-2024-11-19T13:49:07.230Z/api-soporte.zip"
                      },
                      "Handler": "EditarSolicitud.lambda_handler",
                      "Runtime": "python3.12",
                      "FunctionName": "api-soporte-dev-EditarSolicitud",
                      "MemorySize": 1024,
                      "Timeout": 30,
                      "Environment": {
                        "Variables": {
                          "SOPORTE_TABLE": "TABLA-SOPORTE"
                        }
                      },
                      "Role": "arn:aws:iam::316129865556:role/LabRole"
                    },
                    "DependsOn": [
                      "EditarSolicitudLogGroup"
                    ]
                  },
                  "ObtenerSolicitudLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": "serverless-framework-deployments-us-east-1-3b51566d-90f3",
                        "S3Key": "serverless/api-soporte/dev/1732024147230-2024-11-19T13:49:07.230Z/api-soporte.zip"
                      },
                      "Handler": "ObtenerSolicitud.lambda_handler",
                      "Runtime": "python3.12",
                      "FunctionName": "api-soporte-dev-ObtenerSolicitud",
                      "MemorySize": 1024,
                      "Timeout": 30,
                      "Environment": {
                        "Variables": {
                          "SOPORTE_TABLE": "TABLA-SOPORTE"
                        }
                      },
                      "Role": "arn:aws:iam::316129865556:role/LabRole"
                    },
                    "DependsOn": [
                      "ObtenerSolicitudLogGroup"
                    ]
                  },
                  "ListarSolicitudesLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": "serverless-framework-deployments-us-east-1-3b51566d-90f3",
                        "S3Key": "serverless/api-soporte/dev/1732024147230-2024-11-19T13:49:07.230Z/api-soporte.zip"
                      },
                      "Handler": "ListarSolicitudes.lambda_handler",
                      "Runtime": "python3.12",
                      "FunctionName": "api-soporte-dev-ListarSolicitudes",
                      "MemorySize": 1024,
                      "Timeout": 30,
                      "Environment": {
                        "Variables": {
                          "SOPORTE_TABLE": "TABLA-SOPORTE"
                        }
                      },
                      "Role": "arn:aws:iam::316129865556:role/LabRole"
                    },
                    "DependsOn": [
                      "ListarSolicitudesLogGroup"
                    ]
                  },
                  "ListarSolicitudesPorUsuarioLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": "serverless-framework-deployments-us-east-1-3b51566d-90f3",
                        "S3Key": "serverless/api-soporte/dev/1732024147230-2024-11-19T13:49:07.230Z/api-soporte.zip"
                      },
                      "Handler": "ListarSolicitudesPorUsuario.lambda_handler",
                      "Runtime": "python3.12",
                      "FunctionName": "api-soporte-dev-ListarSolicitudesPorUsuario",
                      "MemorySize": 1024,
                      "Timeout": 30,
                      "Environment": {
                        "Variables": {
                          "SOPORTE_TABLE": "TABLA-SOPORTE"
                        }
                      },
                      "Role": "arn:aws:iam::316129865556:role/LabRole"
                    },
                    "DependsOn": [
                      "ListarSolicitudesPorUsuarioLogGroup"
                    ]
                  },
                  "ResponderSolicitudLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": "serverless-framework-deployments-us-east-1-3b51566d-90f3",
                        "S3Key": "serverless/api-soporte/dev/1732024147230-2024-11-19T13:49:07.230Z/api-soporte.zip"
                      },
                      "Handler": "ResponderSolicitud.lambda_handler",
                      "Runtime": "python3.12",
                      "FunctionName": "api-soporte-dev-ResponderSolicitud",
                      "MemorySize": 1024,
                      "Timeout": 30,
                      "Environment": {
                        "Variables": {
                          "SOPORTE_TABLE": "TABLA-SOPORTE"
                        }
                      },
                      "Role": "arn:aws:iam::316129865556:role/LabRole"
                    },
                    "DependsOn": [
                      "ResponderSolicitudLogGroup"
                    ]
                  },
                  "CrearSolicitudLambdaVersionPWFqvyY9KakyOhhY8nXUz0rPoUsl7NSskNbyBExomE": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "CrearSolicitudLambdaFunction"
                      },
                      "CodeSha256": "t5lcz7QWStXQInZEDBUrPNDzXUBA/XkGefXQqZRBBrc="
                    }
                  },
                  "EliminarSolicitudLambdaVersion6VXv70xeC0YEeb1ZVix253CYYdt8MRwzNFuzqey3qRU": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "EliminarSolicitudLambdaFunction"
                      },
                      "CodeSha256": "t5lcz7QWStXQInZEDBUrPNDzXUBA/XkGefXQqZRBBrc="
                    }
                  },
                  "EditarSolicitudLambdaVersionYJJpP4qFq9nA1bpbHGtaQeFq3yFmlGlnyFec0XWHM": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "EditarSolicitudLambdaFunction"
                      },
                      "CodeSha256": "t5lcz7QWStXQInZEDBUrPNDzXUBA/XkGefXQqZRBBrc="
                    }
                  },
                  "ObtenerSolicitudLambdaVersionGhICUB83NpRqpBupPsySUlmCmigjv7FFvmTmlfQ": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "ObtenerSolicitudLambdaFunction"
                      },
                      "CodeSha256": "t5lcz7QWStXQInZEDBUrPNDzXUBA/XkGefXQqZRBBrc="
                    }
                  },
                  "ListarSolicitudesLambdaVersionRjF7JsCdhQHCHSAydcmmvwLfxtK76OHZ39KSNMDhsw": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "ListarSolicitudesLambdaFunction"
                      },
                      "CodeSha256": "t5lcz7QWStXQInZEDBUrPNDzXUBA/XkGefXQqZRBBrc="
                    }
                  },
                  "ListarSolicitudesPorUsuarioLambdaVersionHD5FLbdgrXlqLLS3N5f4F1yUeIgvJm6iv7a0auS0iXo": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "ListarSolicitudesPorUsuarioLambdaFunction"
                      },
                      "CodeSha256": "t5lcz7QWStXQInZEDBUrPNDzXUBA/XkGefXQqZRBBrc="
                    }
                  },
                  "ResponderSolicitudLambdaVersionELBl7Tnl2QcCHYMpNOD2mpyUxGAJXtQYtnVrFuHgDo": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "ResponderSolicitudLambdaFunction"
                      },
                      "CodeSha256": "t5lcz7QWStXQInZEDBUrPNDzXUBA/XkGefXQqZRBBrc="
                    }
                  },
                  "ApiGatewayRestApi": {
                    "Type": "AWS::ApiGateway::RestApi",
                    "Properties": {
                      "Name": "dev-api-soporte",
                      "EndpointConfiguration": {
                        "Types": [
                          "EDGE"
                        ]
                      },
                      "Policy": ""
                    }
                  },
                  "ApiGatewayResourceSoporte": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Fn::GetAtt": [
                          "ApiGatewayRestApi",
                          "RootResourceId"
                        ]
                      },
                      "PathPart": "soporte",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayResourceSoporteCrear": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Ref": "ApiGatewayResourceSoporte"
                      },
                      "PathPart": "crear",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayResourceSoporteEliminar": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Ref": "ApiGatewayResourceSoporte"
                      },
                      "PathPart": "eliminar",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayResourceSoporteEditar": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Ref": "ApiGatewayResourceSoporte"
                      },
                      "PathPart": "editar",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayResourceSoporteObtener": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Ref": "ApiGatewayResourceSoporte"
                      },
                      "PathPart": "obtener",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayResourceSoporteListar": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Ref": "ApiGatewayResourceSoporte"
                      },
                      "PathPart": "listar",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayResourceSoporteListarDashusuario": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Ref": "ApiGatewayResourceSoporte"
                      },
                      "PathPart": "listar-usuario",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayResourceSoporteResponder": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Ref": "ApiGatewayResourceSoporte"
                      },
                      "PathPart": "responder",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayMethodSoporteCrearOptions": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "AuthorizationType": "NONE",
                      "HttpMethod": "OPTIONS",
                      "MethodResponses": [
                        {
                          "StatusCode": "200",
                          "ResponseParameters": {
                            "method.response.header.Access-Control-Allow-Origin": true,
                            "method.response.header.Access-Control-Allow-Headers": true,
                            "method.response.header.Access-Control-Allow-Methods": true
                          },
                          "ResponseModels": {}
                        }
                      ],
                      "RequestParameters": {},
                      "Integration": {
                        "Type": "MOCK",
                        "RequestTemplates": {
                          "application/json": "{statusCode:200}"
                        },
                        "ContentHandling": "CONVERT_TO_TEXT",
                        "IntegrationResponses": [
                          {
                            "StatusCode": "200",
                            "ResponseParameters": {
                              "method.response.header.Access-Control-Allow-Origin": "'*'",
                              "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                              "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
                            },
                            "ResponseTemplates": {
                              "application/json": ""
                            }
                          }
                        ]
                      },
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceSoporteCrear"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayMethodSoporteEliminarOptions": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "AuthorizationType": "NONE",
                      "HttpMethod": "OPTIONS",
                      "MethodResponses": [
                        {
                          "StatusCode": "200",
                          "ResponseParameters": {
                            "method.response.header.Access-Control-Allow-Origin": true,
                            "method.response.header.Access-Control-Allow-Headers": true,
                            "method.response.header.Access-Control-Allow-Methods": true
                          },
                          "ResponseModels": {}
                        }
                      ],
                      "RequestParameters": {},
                      "Integration": {
                        "Type": "MOCK",
                        "RequestTemplates": {
                          "application/json": "{statusCode:200}"
                        },
                        "ContentHandling": "CONVERT_TO_TEXT",
                        "IntegrationResponses": [
                          {
                            "StatusCode": "200",
                            "ResponseParameters": {
                              "method.response.header.Access-Control-Allow-Origin": "'*'",
                              "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                              "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,DELETE'"
                            },
                            "ResponseTemplates": {
                              "application/json": ""
                            }
                          }
                        ]
                      },
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceSoporteEliminar"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayMethodSoporteEditarOptions": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "AuthorizationType": "NONE",
                      "HttpMethod": "OPTIONS",
                      "MethodResponses": [
                        {
                          "StatusCode": "200",
                          "ResponseParameters": {
                            "method.response.header.Access-Control-Allow-Origin": true,
                            "method.response.header.Access-Control-Allow-Headers": true,
                            "method.response.header.Access-Control-Allow-Methods": true
                          },
                          "ResponseModels": {}
                        }
                      ],
                      "RequestParameters": {},
                      "Integration": {
                        "Type": "MOCK",
                        "RequestTemplates": {
                          "application/json": "{statusCode:200}"
                        },
                        "ContentHandling": "CONVERT_TO_TEXT",
                        "IntegrationResponses": [
                          {
                            "StatusCode": "200",
                            "ResponseParameters": {
                              "method.response.header.Access-Control-Allow-Origin": "'*'",
                              "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                              "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,PUT'"
                            },
                            "ResponseTemplates": {
                              "application/json": ""
                            }
                          }
                        ]
                      },
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceSoporteEditar"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayMethodSoporteObtenerOptions": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "AuthorizationType": "NONE",
                      "HttpMethod": "OPTIONS",
                      "MethodResponses": [
                        {
                          "StatusCode": "200",
                          "ResponseParameters": {
                            "method.response.header.Access-Control-Allow-Origin": true,
                            "method.response.header.Access-Control-Allow-Headers": true,
                            "method.response.header.Access-Control-Allow-Methods": true
                          },
                          "ResponseModels": {}
                        }
                      ],
                      "RequestParameters": {},
                      "Integration": {
                        "Type": "MOCK",
                        "RequestTemplates": {
                          "application/json": "{statusCode:200}"
                        },
                        "ContentHandling": "CONVERT_TO_TEXT",
                        "IntegrationResponses": [
                          {
                            "StatusCode": "200",
                            "ResponseParameters": {
                              "method.response.header.Access-Control-Allow-Origin": "'*'",
                              "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                              "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
                            },
                            "ResponseTemplates": {
                              "application/json": ""
                            }
                          }
                        ]
                      },
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceSoporteObtener"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayMethodSoporteListarOptions": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "AuthorizationType": "NONE",
                      "HttpMethod": "OPTIONS",
                      "MethodResponses": [
                        {
                          "StatusCode": "200",
                          "ResponseParameters": {
                            "method.response.header.Access-Control-Allow-Origin": true,
                            "method.response.header.Access-Control-Allow-Headers": true,
                            "method.response.header.Access-Control-Allow-Methods": true
                          },
                          "ResponseModels": {}
                        }
                      ],
                      "RequestParameters": {},
                      "Integration": {
                        "Type": "MOCK",
                        "RequestTemplates": {
                          "application/json": "{statusCode:200}"
                        },
                        "ContentHandling": "CONVERT_TO_TEXT",
                        "IntegrationResponses": [
                          {
                            "StatusCode": "200",
                            "ResponseParameters": {
                              "method.response.header.Access-Control-Allow-Origin": "'*'",
                              "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                              "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
                            },
                            "ResponseTemplates": {
                              "application/json": ""
                            }
                          }
                        ]
                      },
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceSoporteListar"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayMethodSoporteListarDashusuarioOptions": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "AuthorizationType": "NONE",
                      "HttpMethod": "OPTIONS",
                      "MethodResponses": [
                        {
                          "StatusCode": "200",
                          "ResponseParameters": {
                            "method.response.header.Access-Control-Allow-Origin": true,
                            "method.response.header.Access-Control-Allow-Headers": true,
                            "method.response.header.Access-Control-Allow-Methods": true
                          },
                          "ResponseModels": {}
                        }
                      ],
                      "RequestParameters": {},
                      "Integration": {
                        "Type": "MOCK",
                        "RequestTemplates": {
                          "application/json": "{statusCode:200}"
                        },
                        "ContentHandling": "CONVERT_TO_TEXT",
                        "IntegrationResponses": [
                          {
                            "StatusCode": "200",
                            "ResponseParameters": {
                              "method.response.header.Access-Control-Allow-Origin": "'*'",
                              "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                              "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
                            },
                            "ResponseTemplates": {
                              "application/json": ""
                            }
                          }
                        ]
                      },
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceSoporteListarDashusuario"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayMethodSoporteResponderOptions": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "AuthorizationType": "NONE",
                      "HttpMethod": "OPTIONS",
                      "MethodResponses": [
                        {
                          "StatusCode": "200",
                          "ResponseParameters": {
                            "method.response.header.Access-Control-Allow-Origin": true,
                            "method.response.header.Access-Control-Allow-Headers": true,
                            "method.response.header.Access-Control-Allow-Methods": true
                          },
                          "ResponseModels": {}
                        }
                      ],
                      "RequestParameters": {},
                      "Integration": {
                        "Type": "MOCK",
                        "RequestTemplates": {
                          "application/json": "{statusCode:200}"
                        },
                        "ContentHandling": "CONVERT_TO_TEXT",
                        "IntegrationResponses": [
                          {
                            "StatusCode": "200",
                            "ResponseParameters": {
                              "method.response.header.Access-Control-Allow-Origin": "'*'",
                              "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                              "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
                            },
                            "ResponseTemplates": {
                              "application/json": ""
                            }
                          }
                        ]
                      },
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceSoporteResponder"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayMethodSoporteCrearPost": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "POST",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceSoporteCrear"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "CrearSolicitudLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": []
                    },
                    "DependsOn": [
                      "CrearSolicitudLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayMethodSoporteEliminarDelete": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "DELETE",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceSoporteEliminar"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "EliminarSolicitudLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": []
                    },
                    "DependsOn": [
                      "EliminarSolicitudLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayMethodSoporteEditarPut": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "PUT",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceSoporteEditar"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "EditarSolicitudLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": []
                    },
                    "DependsOn": [
                      "EditarSolicitudLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayMethodSoporteObtenerPost": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "POST",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceSoporteObtener"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "ObtenerSolicitudLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": []
                    },
                    "DependsOn": [
                      "ObtenerSolicitudLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayMethodSoporteListarPost": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "POST",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceSoporteListar"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "ListarSolicitudesLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": []
                    },
                    "DependsOn": [
                      "ListarSolicitudesLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayMethodSoporteListarDashusuarioPost": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "POST",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceSoporteListarDashusuario"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "ListarSolicitudesPorUsuarioLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": []
                    },
                    "DependsOn": [
                      "ListarSolicitudesPorUsuarioLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayMethodSoporteResponderPost": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "POST",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceSoporteResponder"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "ResponderSolicitudLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": []
                    },
                    "DependsOn": [
                      "ResponderSolicitudLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayDeployment1732024143912": {
                    "Type": "AWS::ApiGateway::Deployment",
                    "Properties": {
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "StageName": "dev"
                    },
                    "DependsOn": [
                      "ApiGatewayMethodSoporteCrearOptions",
                      "ApiGatewayMethodSoporteEliminarOptions",
                      "ApiGatewayMethodSoporteEditarOptions",
                      "ApiGatewayMethodSoporteObtenerOptions",
                      "ApiGatewayMethodSoporteListarOptions",
                      "ApiGatewayMethodSoporteListarDashusuarioOptions",
                      "ApiGatewayMethodSoporteResponderOptions",
                      "ApiGatewayMethodSoporteCrearPost",
                      "ApiGatewayMethodSoporteEliminarDelete",
                      "ApiGatewayMethodSoporteEditarPut",
                      "ApiGatewayMethodSoporteObtenerPost",
                      "ApiGatewayMethodSoporteListarPost",
                      "ApiGatewayMethodSoporteListarDashusuarioPost",
                      "ApiGatewayMethodSoporteResponderPost"
                    ]
                  },
                  "CrearSolicitudLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "CrearSolicitudLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "EliminarSolicitudLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "EliminarSolicitudLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "EditarSolicitudLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "EditarSolicitudLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "ObtenerSolicitudLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "ObtenerSolicitudLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "ListarSolicitudesLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "ListarSolicitudesLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "ListarSolicitudesPorUsuarioLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "ListarSolicitudesPorUsuarioLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "ResponderSolicitudLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "ResponderSolicitudLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "SoporteTable": {
                    "Type": "AWS::DynamoDB::Table",
                    "Properties": {
                      "TableName": "TABLA-SOPORTE",
                      "AttributeDefinitions": [
                        {
                          "AttributeName": "usuario_id",
                          "AttributeType": "S"
                        },
                        {
                          "AttributeName": "ticket_id",
                          "AttributeType": "S"
                        },
                        {
                          "AttributeName": "estado",
                          "AttributeType": "S"
                        },
                        {
                          "AttributeName": "fecha",
                          "AttributeType": "S"
                        }
                      ],
                      "KeySchema": [
                        {
                          "AttributeName": "usuario_id",
                          "KeyType": "HASH"
                        },
                        {
                          "AttributeName": "ticket_id",
                          "KeyType": "RANGE"
                        }
                      ],
                      "BillingMode": "PAY_PER_REQUEST",
                      "GlobalSecondaryIndexes": [
                        {
                          "IndexName": "estado-index",
                          "KeySchema": [
                            {
                              "AttributeName": "estado",
                              "KeyType": "HASH"
                            },
                            {
                              "AttributeName": "fecha",
                              "KeyType": "RANGE"
                            }
                          ],
                          "Projection": {
                            "ProjectionType": "ALL"
                          }
                        }
                      ]
                    }
                  }
                },
                "Outputs": {
                  "ServerlessDeploymentBucketName": {
                    "Value": "serverless-framework-deployments-us-east-1-3b51566d-90f3",
                    "Export": {
                      "Name": "sls-api-soporte-dev-ServerlessDeploymentBucketName"
                    }
                  },
                  "CrearSolicitudLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "CrearSolicitudLambdaVersionPWFqvyY9KakyOhhY8nXUz0rPoUsl7NSskNbyBExomE"
                    },
                    "Export": {
                      "Name": "sls-api-soporte-dev-CrearSolicitudLambdaFunctionQualifiedArn"
                    }
                  },
                  "EliminarSolicitudLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "EliminarSolicitudLambdaVersion6VXv70xeC0YEeb1ZVix253CYYdt8MRwzNFuzqey3qRU"
                    },
                    "Export": {
                      "Name": "sls-api-soporte-dev-EliminarSolicitudLambdaFunctionQualifiedArn"
                    }
                  },
                  "EditarSolicitudLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "EditarSolicitudLambdaVersionYJJpP4qFq9nA1bpbHGtaQeFq3yFmlGlnyFec0XWHM"
                    },
                    "Export": {
                      "Name": "sls-api-soporte-dev-EditarSolicitudLambdaFunctionQualifiedArn"
                    }
                  },
                  "ObtenerSolicitudLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "ObtenerSolicitudLambdaVersionGhICUB83NpRqpBupPsySUlmCmigjv7FFvmTmlfQ"
                    },
                    "Export": {
                      "Name": "sls-api-soporte-dev-ObtenerSolicitudLambdaFunctionQualifiedArn"
                    }
                  },
                  "ListarSolicitudesLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "ListarSolicitudesLambdaVersionRjF7JsCdhQHCHSAydcmmvwLfxtK76OHZ39KSNMDhsw"
                    },
                    "Export": {
                      "Name": "sls-api-soporte-dev-ListarSolicitudesLambdaFunctionQualifiedArn"
                    }
                  },
                  "ListarSolicitudesPorUsuarioLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "ListarSolicitudesPorUsuarioLambdaVersionHD5FLbdgrXlqLLS3N5f4F1yUeIgvJm6iv7a0auS0iXo"
                    },
                    "Export": {
                      "Name": "sls-api-soporte-dev-ListarSolicitudesPorUsuarioLambdaFunctionQualifiedArn"
                    }
                  },
                  "ResponderSolicitudLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "ResponderSolicitudLambdaVersionELBl7Tnl2QcCHYMpNOD2mpyUxGAJXtQYtnVrFuHgDo"
                    },
                    "Export": {
                      "Name": "sls-api-soporte-dev-ResponderSolicitudLambdaFunctionQualifiedArn"
                    }
                  },
                  "ServiceEndpoint": {
                    "Description": "URL of the service endpoint",
                    "Value": {
                      "Fn::Join": [
                        "",
                        [
                          "https://",
                          {
                            "Ref": "ApiGatewayRestApi"
                          },
                          ".execute-api.",
                          {
                            "Ref": "AWS::Region"
                          },
                          ".",
                          {
                            "Ref": "AWS::URLSuffix"
                          },
                          "/dev"
                        ]
                      ]
                    },
                    "Export": {
                      "Name": "sls-api-soporte-dev-ServiceEndpoint"
                    }
                  }
                }
              },
              "vpc": {}
            },
            "functions": {
              "CrearSolicitud": {
                "handler": "CrearSolicitud.lambda_handler",
                "events": [
                  {
                    "http": {
                      "path": "soporte/crear",
                      "method": "post",
                      "cors": {
                        "origin": "*",
                        "methods": [
                          "OPTIONS",
                          "POST"
                        ],
                        "headers": [
                          "Content-Type",
                          "X-Amz-Date",
                          "Authorization",
                          "X-Api-Key",
                          "X-Amz-Security-Token",
                          "X-Amz-User-Agent",
                          "X-Amzn-Trace-Id"
                        ],
                        "allowCredentials": "<REDACTED>"
                      },
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "name": "api-soporte-dev-CrearSolicitud",
                "package": {},
                "memory": 1024,
                "timeout": 30,
                "runtime": "python3.12",
                "vpc": {},
                "versionLogicalId": "CrearSolicitudLambdaVersionPWFqvyY9KakyOhhY8nXUz0rPoUsl7NSskNbyBExomE"
              },
              "EliminarSolicitud": {
                "handler": "EliminarSolicitud.lambda_handler",
                "events": [
                  {
                    "http": {
                      "path": "soporte/eliminar",
                      "method": "delete",
                      "cors": {
                        "origin": "*",
                        "methods": [
                          "OPTIONS",
                          "DELETE"
                        ],
                        "headers": [
                          "Content-Type",
                          "X-Amz-Date",
                          "Authorization",
                          "X-Api-Key",
                          "X-Amz-Security-Token",
                          "X-Amz-User-Agent",
                          "X-Amzn-Trace-Id"
                        ],
                        "allowCredentials": "<REDACTED>"
                      },
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "name": "api-soporte-dev-EliminarSolicitud",
                "package": {},
                "memory": 1024,
                "timeout": 30,
                "runtime": "python3.12",
                "vpc": {},
                "versionLogicalId": "EliminarSolicitudLambdaVersion6VXv70xeC0YEeb1ZVix253CYYdt8MRwzNFuzqey3qRU"
              },
              "EditarSolicitud": {
                "handler": "EditarSolicitud.lambda_handler",
                "events": [
                  {
                    "http": {
                      "path": "soporte/editar",
                      "method": "put",
                      "cors": {
                        "origin": "*",
                        "methods": [
                          "OPTIONS",
                          "PUT"
                        ],
                        "headers": [
                          "Content-Type",
                          "X-Amz-Date",
                          "Authorization",
                          "X-Api-Key",
                          "X-Amz-Security-Token",
                          "X-Amz-User-Agent",
                          "X-Amzn-Trace-Id"
                        ],
                        "allowCredentials": "<REDACTED>"
                      },
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "name": "api-soporte-dev-EditarSolicitud",
                "package": {},
                "memory": 1024,
                "timeout": 30,
                "runtime": "python3.12",
                "vpc": {},
                "versionLogicalId": "EditarSolicitudLambdaVersionYJJpP4qFq9nA1bpbHGtaQeFq3yFmlGlnyFec0XWHM"
              },
              "ObtenerSolicitud": {
                "handler": "ObtenerSolicitud.lambda_handler",
                "events": [
                  {
                    "http": {
                      "path": "soporte/obtener",
                      "method": "post",
                      "cors": {
                        "origin": "*",
                        "methods": [
                          "OPTIONS",
                          "POST"
                        ],
                        "headers": [
                          "Content-Type",
                          "X-Amz-Date",
                          "Authorization",
                          "X-Api-Key",
                          "X-Amz-Security-Token",
                          "X-Amz-User-Agent",
                          "X-Amzn-Trace-Id"
                        ],
                        "allowCredentials": "<REDACTED>"
                      },
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "name": "api-soporte-dev-ObtenerSolicitud",
                "package": {},
                "memory": 1024,
                "timeout": 30,
                "runtime": "python3.12",
                "vpc": {},
                "versionLogicalId": "ObtenerSolicitudLambdaVersionGhICUB83NpRqpBupPsySUlmCmigjv7FFvmTmlfQ"
              },
              "ListarSolicitudes": {
                "handler": "ListarSolicitudes.lambda_handler",
                "events": [
                  {
                    "http": {
                      "path": "soporte/listar",
                      "method": "post",
                      "cors": {
                        "origin": "*",
                        "methods": [
                          "OPTIONS",
                          "POST"
                        ],
                        "headers": [
                          "Content-Type",
                          "X-Amz-Date",
                          "Authorization",
                          "X-Api-Key",
                          "X-Amz-Security-Token",
                          "X-Amz-User-Agent",
                          "X-Amzn-Trace-Id"
                        ],
                        "allowCredentials": "<REDACTED>"
                      },
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "name": "api-soporte-dev-ListarSolicitudes",
                "package": {},
                "memory": 1024,
                "timeout": 30,
                "runtime": "python3.12",
                "vpc": {},
                "versionLogicalId": "ListarSolicitudesLambdaVersionRjF7JsCdhQHCHSAydcmmvwLfxtK76OHZ39KSNMDhsw"
              },
              "ListarSolicitudesPorUsuario": {
                "handler": "ListarSolicitudesPorUsuario.lambda_handler",
                "events": [
                  {
                    "http": {
                      "path": "soporte/listar-usuario",
                      "method": "post",
                      "cors": {
                        "origin": "*",
                        "methods": [
                          "OPTIONS",
                          "POST"
                        ],
                        "headers": [
                          "Content-Type",
                          "X-Amz-Date",
                          "Authorization",
                          "X-Api-Key",
                          "X-Amz-Security-Token",
                          "X-Amz-User-Agent",
                          "X-Amzn-Trace-Id"
                        ],
                        "allowCredentials": "<REDACTED>"
                      },
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "name": "api-soporte-dev-ListarSolicitudesPorUsuario",
                "package": {},
                "memory": 1024,
                "timeout": 30,
                "runtime": "python3.12",
                "vpc": {},
                "versionLogicalId": "ListarSolicitudesPorUsuarioLambdaVersionHD5FLbdgrXlqLLS3N5f4F1yUeIgvJm6iv7a0auS0iXo"
              },
              "ResponderSolicitud": {
                "handler": "ResponderSolicitud.lambda_handler",
                "events": [
                  {
                    "http": {
                      "path": "soporte/responder",
                      "method": "post",
                      "cors": {
                        "origin": "*",
                        "methods": [
                          "OPTIONS",
                          "POST"
                        ],
                        "headers": [
                          "Content-Type",
                          "X-Amz-Date",
                          "Authorization",
                          "X-Api-Key",
                          "X-Amz-Security-Token",
                          "X-Amz-User-Agent",
                          "X-Amzn-Trace-Id"
                        ],
                        "allowCredentials": "<REDACTED>"
                      },
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "name": "api-soporte-dev-ResponderSolicitud",
                "package": {},
                "memory": 1024,
                "timeout": 30,
                "runtime": "python3.12",
                "vpc": {},
                "versionLogicalId": "ResponderSolicitudLambdaVersionELBl7Tnl2QcCHYMpNOD2mpyUxGAJXtQYtnVrFuHgDo"
              }
            },
            "resources": {
              "Resources": {
                "SoporteTable": {
                  "Type": "AWS::DynamoDB::Table",
                  "Properties": {
                    "TableName": "TABLA-SOPORTE",
                    "AttributeDefinitions": [
                      {
                        "AttributeName": "usuario_id",
                        "AttributeType": "S"
                      },
                      {
                        "AttributeName": "ticket_id",
                        "AttributeType": "S"
                      },
                      {
                        "AttributeName": "estado",
                        "AttributeType": "S"
                      },
                      {
                        "AttributeName": "fecha",
                        "AttributeType": "S"
                      }
                    ],
                    "KeySchema": [
                      {
                        "AttributeName": "usuario_id",
                        "KeyType": "HASH"
                      },
                      {
                        "AttributeName": "ticket_id",
                        "KeyType": "RANGE"
                      }
                    ],
                    "BillingMode": "PAY_PER_REQUEST",
                    "GlobalSecondaryIndexes": [
                      {
                        "IndexName": "estado-index",
                        "KeySchema": [
                          {
                            "AttributeName": "estado",
                            "KeyType": "HASH"
                          },
                          {
                            "AttributeName": "fecha",
                            "KeyType": "RANGE"
                          }
                        ],
                        "Projection": {
                          "ProjectionType": "ALL"
                        }
                      }
                    ]
                  }
                }
              },
              "Outputs": {}
            }
          },
          "configFileDirPath": "/home/ubuntu/Proyecto-2-BANCO-Cloud/TABLA-SOPORTE",
          "config": {
            "type": "self"
          },
          "options": {},
          "stage": "dev",
          "dashboard": null,
          "logger": {
            "namespace": "s:core:resolver:self",
            "prefix": null,
            "prefixColor": null
          },
          "_credentialsPromise": "<REDACTED>"
        },
        "resolvers": {}
      },
      "sls": {
        "instance": {
          "credentials": "<REDACTED>",
          "serviceConfigFile": {
            "org": "antoniocot",
            "service": "api-soporte",
            "provider": {
              "name": "aws",
              "runtime": "python3.12",
              "memorySize": 1024,
              "timeout": 30,
              "iam": {
                "role": "arn:aws:iam::316129865556:role/LabRole"
              },
              "environment": {
                "SOPORTE_TABLE": "TABLA-SOPORTE"
              },
              "stage": "dev",
              "region": "us-east-1",
              "versionFunctions": true,
              "compiledCloudFormationTemplate": {
                "AWSTemplateFormatVersion": "2010-09-09",
                "Description": "The AWS CloudFormation template for this Serverless application",
                "Resources": {
                  "CrearSolicitudLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/api-soporte-dev-CrearSolicitud"
                    }
                  },
                  "EliminarSolicitudLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/api-soporte-dev-EliminarSolicitud"
                    }
                  },
                  "EditarSolicitudLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/api-soporte-dev-EditarSolicitud"
                    }
                  },
                  "ObtenerSolicitudLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/api-soporte-dev-ObtenerSolicitud"
                    }
                  },
                  "ListarSolicitudesLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/api-soporte-dev-ListarSolicitudes"
                    }
                  },
                  "ListarSolicitudesPorUsuarioLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/api-soporte-dev-ListarSolicitudesPorUsuario"
                    }
                  },
                  "ResponderSolicitudLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/api-soporte-dev-ResponderSolicitud"
                    }
                  },
                  "CrearSolicitudLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": "serverless-framework-deployments-us-east-1-3b51566d-90f3",
                        "S3Key": "serverless/api-soporte/dev/1732024147230-2024-11-19T13:49:07.230Z/api-soporte.zip"
                      },
                      "Handler": "CrearSolicitud.lambda_handler",
                      "Runtime": "python3.12",
                      "FunctionName": "api-soporte-dev-CrearSolicitud",
                      "MemorySize": 1024,
                      "Timeout": 30,
                      "Environment": {
                        "Variables": {
                          "SOPORTE_TABLE": "TABLA-SOPORTE"
                        }
                      },
                      "Role": "arn:aws:iam::316129865556:role/LabRole"
                    },
                    "DependsOn": [
                      "CrearSolicitudLogGroup"
                    ]
                  },
                  "EliminarSolicitudLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": "serverless-framework-deployments-us-east-1-3b51566d-90f3",
                        "S3Key": "serverless/api-soporte/dev/1732024147230-2024-11-19T13:49:07.230Z/api-soporte.zip"
                      },
                      "Handler": "EliminarSolicitud.lambda_handler",
                      "Runtime": "python3.12",
                      "FunctionName": "api-soporte-dev-EliminarSolicitud",
                      "MemorySize": 1024,
                      "Timeout": 30,
                      "Environment": {
                        "Variables": {
                          "SOPORTE_TABLE": "TABLA-SOPORTE"
                        }
                      },
                      "Role": "arn:aws:iam::316129865556:role/LabRole"
                    },
                    "DependsOn": [
                      "EliminarSolicitudLogGroup"
                    ]
                  },
                  "EditarSolicitudLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": "serverless-framework-deployments-us-east-1-3b51566d-90f3",
                        "S3Key": "serverless/api-soporte/dev/1732024147230-2024-11-19T13:49:07.230Z/api-soporte.zip"
                      },
                      "Handler": "EditarSolicitud.lambda_handler",
                      "Runtime": "python3.12",
                      "FunctionName": "api-soporte-dev-EditarSolicitud",
                      "MemorySize": 1024,
                      "Timeout": 30,
                      "Environment": {
                        "Variables": {
                          "SOPORTE_TABLE": "TABLA-SOPORTE"
                        }
                      },
                      "Role": "arn:aws:iam::316129865556:role/LabRole"
                    },
                    "DependsOn": [
                      "EditarSolicitudLogGroup"
                    ]
                  },
                  "ObtenerSolicitudLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": "serverless-framework-deployments-us-east-1-3b51566d-90f3",
                        "S3Key": "serverless/api-soporte/dev/1732024147230-2024-11-19T13:49:07.230Z/api-soporte.zip"
                      },
                      "Handler": "ObtenerSolicitud.lambda_handler",
                      "Runtime": "python3.12",
                      "FunctionName": "api-soporte-dev-ObtenerSolicitud",
                      "MemorySize": 1024,
                      "Timeout": 30,
                      "Environment": {
                        "Variables": {
                          "SOPORTE_TABLE": "TABLA-SOPORTE"
                        }
                      },
                      "Role": "arn:aws:iam::316129865556:role/LabRole"
                    },
                    "DependsOn": [
                      "ObtenerSolicitudLogGroup"
                    ]
                  },
                  "ListarSolicitudesLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": "serverless-framework-deployments-us-east-1-3b51566d-90f3",
                        "S3Key": "serverless/api-soporte/dev/1732024147230-2024-11-19T13:49:07.230Z/api-soporte.zip"
                      },
                      "Handler": "ListarSolicitudes.lambda_handler",
                      "Runtime": "python3.12",
                      "FunctionName": "api-soporte-dev-ListarSolicitudes",
                      "MemorySize": 1024,
                      "Timeout": 30,
                      "Environment": {
                        "Variables": {
                          "SOPORTE_TABLE": "TABLA-SOPORTE"
                        }
                      },
                      "Role": "arn:aws:iam::316129865556:role/LabRole"
                    },
                    "DependsOn": [
                      "ListarSolicitudesLogGroup"
                    ]
                  },
                  "ListarSolicitudesPorUsuarioLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": "serverless-framework-deployments-us-east-1-3b51566d-90f3",
                        "S3Key": "serverless/api-soporte/dev/1732024147230-2024-11-19T13:49:07.230Z/api-soporte.zip"
                      },
                      "Handler": "ListarSolicitudesPorUsuario.lambda_handler",
                      "Runtime": "python3.12",
                      "FunctionName": "api-soporte-dev-ListarSolicitudesPorUsuario",
                      "MemorySize": 1024,
                      "Timeout": 30,
                      "Environment": {
                        "Variables": {
                          "SOPORTE_TABLE": "TABLA-SOPORTE"
                        }
                      },
                      "Role": "arn:aws:iam::316129865556:role/LabRole"
                    },
                    "DependsOn": [
                      "ListarSolicitudesPorUsuarioLogGroup"
                    ]
                  },
                  "ResponderSolicitudLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": "serverless-framework-deployments-us-east-1-3b51566d-90f3",
                        "S3Key": "serverless/api-soporte/dev/1732024147230-2024-11-19T13:49:07.230Z/api-soporte.zip"
                      },
                      "Handler": "ResponderSolicitud.lambda_handler",
                      "Runtime": "python3.12",
                      "FunctionName": "api-soporte-dev-ResponderSolicitud",
                      "MemorySize": 1024,
                      "Timeout": 30,
                      "Environment": {
                        "Variables": {
                          "SOPORTE_TABLE": "TABLA-SOPORTE"
                        }
                      },
                      "Role": "arn:aws:iam::316129865556:role/LabRole"
                    },
                    "DependsOn": [
                      "ResponderSolicitudLogGroup"
                    ]
                  },
                  "CrearSolicitudLambdaVersionPWFqvyY9KakyOhhY8nXUz0rPoUsl7NSskNbyBExomE": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "CrearSolicitudLambdaFunction"
                      },
                      "CodeSha256": "t5lcz7QWStXQInZEDBUrPNDzXUBA/XkGefXQqZRBBrc="
                    }
                  },
                  "EliminarSolicitudLambdaVersion6VXv70xeC0YEeb1ZVix253CYYdt8MRwzNFuzqey3qRU": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "EliminarSolicitudLambdaFunction"
                      },
                      "CodeSha256": "t5lcz7QWStXQInZEDBUrPNDzXUBA/XkGefXQqZRBBrc="
                    }
                  },
                  "EditarSolicitudLambdaVersionYJJpP4qFq9nA1bpbHGtaQeFq3yFmlGlnyFec0XWHM": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "EditarSolicitudLambdaFunction"
                      },
                      "CodeSha256": "t5lcz7QWStXQInZEDBUrPNDzXUBA/XkGefXQqZRBBrc="
                    }
                  },
                  "ObtenerSolicitudLambdaVersionGhICUB83NpRqpBupPsySUlmCmigjv7FFvmTmlfQ": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "ObtenerSolicitudLambdaFunction"
                      },
                      "CodeSha256": "t5lcz7QWStXQInZEDBUrPNDzXUBA/XkGefXQqZRBBrc="
                    }
                  },
                  "ListarSolicitudesLambdaVersionRjF7JsCdhQHCHSAydcmmvwLfxtK76OHZ39KSNMDhsw": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "ListarSolicitudesLambdaFunction"
                      },
                      "CodeSha256": "t5lcz7QWStXQInZEDBUrPNDzXUBA/XkGefXQqZRBBrc="
                    }
                  },
                  "ListarSolicitudesPorUsuarioLambdaVersionHD5FLbdgrXlqLLS3N5f4F1yUeIgvJm6iv7a0auS0iXo": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "ListarSolicitudesPorUsuarioLambdaFunction"
                      },
                      "CodeSha256": "t5lcz7QWStXQInZEDBUrPNDzXUBA/XkGefXQqZRBBrc="
                    }
                  },
                  "ResponderSolicitudLambdaVersionELBl7Tnl2QcCHYMpNOD2mpyUxGAJXtQYtnVrFuHgDo": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "ResponderSolicitudLambdaFunction"
                      },
                      "CodeSha256": "t5lcz7QWStXQInZEDBUrPNDzXUBA/XkGefXQqZRBBrc="
                    }
                  },
                  "ApiGatewayRestApi": {
                    "Type": "AWS::ApiGateway::RestApi",
                    "Properties": {
                      "Name": "dev-api-soporte",
                      "EndpointConfiguration": {
                        "Types": [
                          "EDGE"
                        ]
                      },
                      "Policy": ""
                    }
                  },
                  "ApiGatewayResourceSoporte": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Fn::GetAtt": [
                          "ApiGatewayRestApi",
                          "RootResourceId"
                        ]
                      },
                      "PathPart": "soporte",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayResourceSoporteCrear": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Ref": "ApiGatewayResourceSoporte"
                      },
                      "PathPart": "crear",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayResourceSoporteEliminar": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Ref": "ApiGatewayResourceSoporte"
                      },
                      "PathPart": "eliminar",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayResourceSoporteEditar": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Ref": "ApiGatewayResourceSoporte"
                      },
                      "PathPart": "editar",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayResourceSoporteObtener": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Ref": "ApiGatewayResourceSoporte"
                      },
                      "PathPart": "obtener",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayResourceSoporteListar": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Ref": "ApiGatewayResourceSoporte"
                      },
                      "PathPart": "listar",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayResourceSoporteListarDashusuario": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Ref": "ApiGatewayResourceSoporte"
                      },
                      "PathPart": "listar-usuario",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayResourceSoporteResponder": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Ref": "ApiGatewayResourceSoporte"
                      },
                      "PathPart": "responder",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayMethodSoporteCrearOptions": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "AuthorizationType": "NONE",
                      "HttpMethod": "OPTIONS",
                      "MethodResponses": [
                        {
                          "StatusCode": "200",
                          "ResponseParameters": {
                            "method.response.header.Access-Control-Allow-Origin": true,
                            "method.response.header.Access-Control-Allow-Headers": true,
                            "method.response.header.Access-Control-Allow-Methods": true
                          },
                          "ResponseModels": {}
                        }
                      ],
                      "RequestParameters": {},
                      "Integration": {
                        "Type": "MOCK",
                        "RequestTemplates": {
                          "application/json": "{statusCode:200}"
                        },
                        "ContentHandling": "CONVERT_TO_TEXT",
                        "IntegrationResponses": [
                          {
                            "StatusCode": "200",
                            "ResponseParameters": {
                              "method.response.header.Access-Control-Allow-Origin": "'*'",
                              "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                              "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
                            },
                            "ResponseTemplates": {
                              "application/json": ""
                            }
                          }
                        ]
                      },
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceSoporteCrear"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayMethodSoporteEliminarOptions": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "AuthorizationType": "NONE",
                      "HttpMethod": "OPTIONS",
                      "MethodResponses": [
                        {
                          "StatusCode": "200",
                          "ResponseParameters": {
                            "method.response.header.Access-Control-Allow-Origin": true,
                            "method.response.header.Access-Control-Allow-Headers": true,
                            "method.response.header.Access-Control-Allow-Methods": true
                          },
                          "ResponseModels": {}
                        }
                      ],
                      "RequestParameters": {},
                      "Integration": {
                        "Type": "MOCK",
                        "RequestTemplates": {
                          "application/json": "{statusCode:200}"
                        },
                        "ContentHandling": "CONVERT_TO_TEXT",
                        "IntegrationResponses": [
                          {
                            "StatusCode": "200",
                            "ResponseParameters": {
                              "method.response.header.Access-Control-Allow-Origin": "'*'",
                              "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                              "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,DELETE'"
                            },
                            "ResponseTemplates": {
                              "application/json": ""
                            }
                          }
                        ]
                      },
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceSoporteEliminar"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayMethodSoporteEditarOptions": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "AuthorizationType": "NONE",
                      "HttpMethod": "OPTIONS",
                      "MethodResponses": [
                        {
                          "StatusCode": "200",
                          "ResponseParameters": {
                            "method.response.header.Access-Control-Allow-Origin": true,
                            "method.response.header.Access-Control-Allow-Headers": true,
                            "method.response.header.Access-Control-Allow-Methods": true
                          },
                          "ResponseModels": {}
                        }
                      ],
                      "RequestParameters": {},
                      "Integration": {
                        "Type": "MOCK",
                        "RequestTemplates": {
                          "application/json": "{statusCode:200}"
                        },
                        "ContentHandling": "CONVERT_TO_TEXT",
                        "IntegrationResponses": [
                          {
                            "StatusCode": "200",
                            "ResponseParameters": {
                              "method.response.header.Access-Control-Allow-Origin": "'*'",
                              "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                              "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,PUT'"
                            },
                            "ResponseTemplates": {
                              "application/json": ""
                            }
                          }
                        ]
                      },
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceSoporteEditar"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayMethodSoporteObtenerOptions": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "AuthorizationType": "NONE",
                      "HttpMethod": "OPTIONS",
                      "MethodResponses": [
                        {
                          "StatusCode": "200",
                          "ResponseParameters": {
                            "method.response.header.Access-Control-Allow-Origin": true,
                            "method.response.header.Access-Control-Allow-Headers": true,
                            "method.response.header.Access-Control-Allow-Methods": true
                          },
                          "ResponseModels": {}
                        }
                      ],
                      "RequestParameters": {},
                      "Integration": {
                        "Type": "MOCK",
                        "RequestTemplates": {
                          "application/json": "{statusCode:200}"
                        },
                        "ContentHandling": "CONVERT_TO_TEXT",
                        "IntegrationResponses": [
                          {
                            "StatusCode": "200",
                            "ResponseParameters": {
                              "method.response.header.Access-Control-Allow-Origin": "'*'",
                              "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                              "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
                            },
                            "ResponseTemplates": {
                              "application/json": ""
                            }
                          }
                        ]
                      },
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceSoporteObtener"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayMethodSoporteListarOptions": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "AuthorizationType": "NONE",
                      "HttpMethod": "OPTIONS",
                      "MethodResponses": [
                        {
                          "StatusCode": "200",
                          "ResponseParameters": {
                            "method.response.header.Access-Control-Allow-Origin": true,
                            "method.response.header.Access-Control-Allow-Headers": true,
                            "method.response.header.Access-Control-Allow-Methods": true
                          },
                          "ResponseModels": {}
                        }
                      ],
                      "RequestParameters": {},
                      "Integration": {
                        "Type": "MOCK",
                        "RequestTemplates": {
                          "application/json": "{statusCode:200}"
                        },
                        "ContentHandling": "CONVERT_TO_TEXT",
                        "IntegrationResponses": [
                          {
                            "StatusCode": "200",
                            "ResponseParameters": {
                              "method.response.header.Access-Control-Allow-Origin": "'*'",
                              "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                              "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
                            },
                            "ResponseTemplates": {
                              "application/json": ""
                            }
                          }
                        ]
                      },
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceSoporteListar"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayMethodSoporteListarDashusuarioOptions": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "AuthorizationType": "NONE",
                      "HttpMethod": "OPTIONS",
                      "MethodResponses": [
                        {
                          "StatusCode": "200",
                          "ResponseParameters": {
                            "method.response.header.Access-Control-Allow-Origin": true,
                            "method.response.header.Access-Control-Allow-Headers": true,
                            "method.response.header.Access-Control-Allow-Methods": true
                          },
                          "ResponseModels": {}
                        }
                      ],
                      "RequestParameters": {},
                      "Integration": {
                        "Type": "MOCK",
                        "RequestTemplates": {
                          "application/json": "{statusCode:200}"
                        },
                        "ContentHandling": "CONVERT_TO_TEXT",
                        "IntegrationResponses": [
                          {
                            "StatusCode": "200",
                            "ResponseParameters": {
                              "method.response.header.Access-Control-Allow-Origin": "'*'",
                              "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                              "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
                            },
                            "ResponseTemplates": {
                              "application/json": ""
                            }
                          }
                        ]
                      },
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceSoporteListarDashusuario"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayMethodSoporteResponderOptions": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "AuthorizationType": "NONE",
                      "HttpMethod": "OPTIONS",
                      "MethodResponses": [
                        {
                          "StatusCode": "200",
                          "ResponseParameters": {
                            "method.response.header.Access-Control-Allow-Origin": true,
                            "method.response.header.Access-Control-Allow-Headers": true,
                            "method.response.header.Access-Control-Allow-Methods": true
                          },
                          "ResponseModels": {}
                        }
                      ],
                      "RequestParameters": {},
                      "Integration": {
                        "Type": "MOCK",
                        "RequestTemplates": {
                          "application/json": "{statusCode:200}"
                        },
                        "ContentHandling": "CONVERT_TO_TEXT",
                        "IntegrationResponses": [
                          {
                            "StatusCode": "200",
                            "ResponseParameters": {
                              "method.response.header.Access-Control-Allow-Origin": "'*'",
                              "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                              "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
                            },
                            "ResponseTemplates": {
                              "application/json": ""
                            }
                          }
                        ]
                      },
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceSoporteResponder"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayMethodSoporteCrearPost": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "POST",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceSoporteCrear"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "CrearSolicitudLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": []
                    },
                    "DependsOn": [
                      "CrearSolicitudLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayMethodSoporteEliminarDelete": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "DELETE",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceSoporteEliminar"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "EliminarSolicitudLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": []
                    },
                    "DependsOn": [
                      "EliminarSolicitudLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayMethodSoporteEditarPut": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "PUT",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceSoporteEditar"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "EditarSolicitudLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": []
                    },
                    "DependsOn": [
                      "EditarSolicitudLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayMethodSoporteObtenerPost": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "POST",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceSoporteObtener"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "ObtenerSolicitudLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": []
                    },
                    "DependsOn": [
                      "ObtenerSolicitudLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayMethodSoporteListarPost": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "POST",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceSoporteListar"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "ListarSolicitudesLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": []
                    },
                    "DependsOn": [
                      "ListarSolicitudesLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayMethodSoporteListarDashusuarioPost": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "POST",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceSoporteListarDashusuario"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "ListarSolicitudesPorUsuarioLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": []
                    },
                    "DependsOn": [
                      "ListarSolicitudesPorUsuarioLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayMethodSoporteResponderPost": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "POST",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceSoporteResponder"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "ResponderSolicitudLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": []
                    },
                    "DependsOn": [
                      "ResponderSolicitudLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayDeployment1732024143912": {
                    "Type": "AWS::ApiGateway::Deployment",
                    "Properties": {
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "StageName": "dev"
                    },
                    "DependsOn": [
                      "ApiGatewayMethodSoporteCrearOptions",
                      "ApiGatewayMethodSoporteEliminarOptions",
                      "ApiGatewayMethodSoporteEditarOptions",
                      "ApiGatewayMethodSoporteObtenerOptions",
                      "ApiGatewayMethodSoporteListarOptions",
                      "ApiGatewayMethodSoporteListarDashusuarioOptions",
                      "ApiGatewayMethodSoporteResponderOptions",
                      "ApiGatewayMethodSoporteCrearPost",
                      "ApiGatewayMethodSoporteEliminarDelete",
                      "ApiGatewayMethodSoporteEditarPut",
                      "ApiGatewayMethodSoporteObtenerPost",
                      "ApiGatewayMethodSoporteListarPost",
                      "ApiGatewayMethodSoporteListarDashusuarioPost",
                      "ApiGatewayMethodSoporteResponderPost"
                    ]
                  },
                  "CrearSolicitudLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "CrearSolicitudLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "EliminarSolicitudLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "EliminarSolicitudLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "EditarSolicitudLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "EditarSolicitudLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "ObtenerSolicitudLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "ObtenerSolicitudLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "ListarSolicitudesLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "ListarSolicitudesLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "ListarSolicitudesPorUsuarioLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "ListarSolicitudesPorUsuarioLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "ResponderSolicitudLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "ResponderSolicitudLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "SoporteTable": {
                    "Type": "AWS::DynamoDB::Table",
                    "Properties": {
                      "TableName": "TABLA-SOPORTE",
                      "AttributeDefinitions": [
                        {
                          "AttributeName": "usuario_id",
                          "AttributeType": "S"
                        },
                        {
                          "AttributeName": "ticket_id",
                          "AttributeType": "S"
                        },
                        {
                          "AttributeName": "estado",
                          "AttributeType": "S"
                        },
                        {
                          "AttributeName": "fecha",
                          "AttributeType": "S"
                        }
                      ],
                      "KeySchema": [
                        {
                          "AttributeName": "usuario_id",
                          "KeyType": "HASH"
                        },
                        {
                          "AttributeName": "ticket_id",
                          "KeyType": "RANGE"
                        }
                      ],
                      "BillingMode": "PAY_PER_REQUEST",
                      "GlobalSecondaryIndexes": [
                        {
                          "IndexName": "estado-index",
                          "KeySchema": [
                            {
                              "AttributeName": "estado",
                              "KeyType": "HASH"
                            },
                            {
                              "AttributeName": "fecha",
                              "KeyType": "RANGE"
                            }
                          ],
                          "Projection": {
                            "ProjectionType": "ALL"
                          }
                        }
                      ]
                    }
                  }
                },
                "Outputs": {
                  "ServerlessDeploymentBucketName": {
                    "Value": "serverless-framework-deployments-us-east-1-3b51566d-90f3",
                    "Export": {
                      "Name": "sls-api-soporte-dev-ServerlessDeploymentBucketName"
                    }
                  },
                  "CrearSolicitudLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "CrearSolicitudLambdaVersionPWFqvyY9KakyOhhY8nXUz0rPoUsl7NSskNbyBExomE"
                    },
                    "Export": {
                      "Name": "sls-api-soporte-dev-CrearSolicitudLambdaFunctionQualifiedArn"
                    }
                  },
                  "EliminarSolicitudLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "EliminarSolicitudLambdaVersion6VXv70xeC0YEeb1ZVix253CYYdt8MRwzNFuzqey3qRU"
                    },
                    "Export": {
                      "Name": "sls-api-soporte-dev-EliminarSolicitudLambdaFunctionQualifiedArn"
                    }
                  },
                  "EditarSolicitudLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "EditarSolicitudLambdaVersionYJJpP4qFq9nA1bpbHGtaQeFq3yFmlGlnyFec0XWHM"
                    },
                    "Export": {
                      "Name": "sls-api-soporte-dev-EditarSolicitudLambdaFunctionQualifiedArn"
                    }
                  },
                  "ObtenerSolicitudLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "ObtenerSolicitudLambdaVersionGhICUB83NpRqpBupPsySUlmCmigjv7FFvmTmlfQ"
                    },
                    "Export": {
                      "Name": "sls-api-soporte-dev-ObtenerSolicitudLambdaFunctionQualifiedArn"
                    }
                  },
                  "ListarSolicitudesLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "ListarSolicitudesLambdaVersionRjF7JsCdhQHCHSAydcmmvwLfxtK76OHZ39KSNMDhsw"
                    },
                    "Export": {
                      "Name": "sls-api-soporte-dev-ListarSolicitudesLambdaFunctionQualifiedArn"
                    }
                  },
                  "ListarSolicitudesPorUsuarioLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "ListarSolicitudesPorUsuarioLambdaVersionHD5FLbdgrXlqLLS3N5f4F1yUeIgvJm6iv7a0auS0iXo"
                    },
                    "Export": {
                      "Name": "sls-api-soporte-dev-ListarSolicitudesPorUsuarioLambdaFunctionQualifiedArn"
                    }
                  },
                  "ResponderSolicitudLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "ResponderSolicitudLambdaVersionELBl7Tnl2QcCHYMpNOD2mpyUxGAJXtQYtnVrFuHgDo"
                    },
                    "Export": {
                      "Name": "sls-api-soporte-dev-ResponderSolicitudLambdaFunctionQualifiedArn"
                    }
                  },
                  "ServiceEndpoint": {
                    "Description": "URL of the service endpoint",
                    "Value": {
                      "Fn::Join": [
                        "",
                        [
                          "https://",
                          {
                            "Ref": "ApiGatewayRestApi"
                          },
                          ".execute-api.",
                          {
                            "Ref": "AWS::Region"
                          },
                          ".",
                          {
                            "Ref": "AWS::URLSuffix"
                          },
                          "/dev"
                        ]
                      ]
                    },
                    "Export": {
                      "Name": "sls-api-soporte-dev-ServiceEndpoint"
                    }
                  }
                }
              },
              "vpc": {}
            },
            "functions": {
              "CrearSolicitud": {
                "handler": "CrearSolicitud.lambda_handler",
                "events": [
                  {
                    "http": {
                      "path": "soporte/crear",
                      "method": "post",
                      "cors": {
                        "origin": "*",
                        "methods": [
                          "OPTIONS",
                          "POST"
                        ],
                        "headers": [
                          "Content-Type",
                          "X-Amz-Date",
                          "Authorization",
                          "X-Api-Key",
                          "X-Amz-Security-Token",
                          "X-Amz-User-Agent",
                          "X-Amzn-Trace-Id"
                        ],
                        "allowCredentials": "<REDACTED>"
                      },
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "name": "api-soporte-dev-CrearSolicitud",
                "package": {},
                "memory": 1024,
                "timeout": 30,
                "runtime": "python3.12",
                "vpc": {},
                "versionLogicalId": "CrearSolicitudLambdaVersionPWFqvyY9KakyOhhY8nXUz0rPoUsl7NSskNbyBExomE"
              },
              "EliminarSolicitud": {
                "handler": "EliminarSolicitud.lambda_handler",
                "events": [
                  {
                    "http": {
                      "path": "soporte/eliminar",
                      "method": "delete",
                      "cors": {
                        "origin": "*",
                        "methods": [
                          "OPTIONS",
                          "DELETE"
                        ],
                        "headers": [
                          "Content-Type",
                          "X-Amz-Date",
                          "Authorization",
                          "X-Api-Key",
                          "X-Amz-Security-Token",
                          "X-Amz-User-Agent",
                          "X-Amzn-Trace-Id"
                        ],
                        "allowCredentials": "<REDACTED>"
                      },
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "name": "api-soporte-dev-EliminarSolicitud",
                "package": {},
                "memory": 1024,
                "timeout": 30,
                "runtime": "python3.12",
                "vpc": {},
                "versionLogicalId": "EliminarSolicitudLambdaVersion6VXv70xeC0YEeb1ZVix253CYYdt8MRwzNFuzqey3qRU"
              },
              "EditarSolicitud": {
                "handler": "EditarSolicitud.lambda_handler",
                "events": [
                  {
                    "http": {
                      "path": "soporte/editar",
                      "method": "put",
                      "cors": {
                        "origin": "*",
                        "methods": [
                          "OPTIONS",
                          "PUT"
                        ],
                        "headers": [
                          "Content-Type",
                          "X-Amz-Date",
                          "Authorization",
                          "X-Api-Key",
                          "X-Amz-Security-Token",
                          "X-Amz-User-Agent",
                          "X-Amzn-Trace-Id"
                        ],
                        "allowCredentials": "<REDACTED>"
                      },
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "name": "api-soporte-dev-EditarSolicitud",
                "package": {},
                "memory": 1024,
                "timeout": 30,
                "runtime": "python3.12",
                "vpc": {},
                "versionLogicalId": "EditarSolicitudLambdaVersionYJJpP4qFq9nA1bpbHGtaQeFq3yFmlGlnyFec0XWHM"
              },
              "ObtenerSolicitud": {
                "handler": "ObtenerSolicitud.lambda_handler",
                "events": [
                  {
                    "http": {
                      "path": "soporte/obtener",
                      "method": "post",
                      "cors": {
                        "origin": "*",
                        "methods": [
                          "OPTIONS",
                          "POST"
                        ],
                        "headers": [
                          "Content-Type",
                          "X-Amz-Date",
                          "Authorization",
                          "X-Api-Key",
                          "X-Amz-Security-Token",
                          "X-Amz-User-Agent",
                          "X-Amzn-Trace-Id"
                        ],
                        "allowCredentials": "<REDACTED>"
                      },
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "name": "api-soporte-dev-ObtenerSolicitud",
                "package": {},
                "memory": 1024,
                "timeout": 30,
                "runtime": "python3.12",
                "vpc": {},
                "versionLogicalId": "ObtenerSolicitudLambdaVersionGhICUB83NpRqpBupPsySUlmCmigjv7FFvmTmlfQ"
              },
              "ListarSolicitudes": {
                "handler": "ListarSolicitudes.lambda_handler",
                "events": [
                  {
                    "http": {
                      "path": "soporte/listar",
                      "method": "post",
                      "cors": {
                        "origin": "*",
                        "methods": [
                          "OPTIONS",
                          "POST"
                        ],
                        "headers": [
                          "Content-Type",
                          "X-Amz-Date",
                          "Authorization",
                          "X-Api-Key",
                          "X-Amz-Security-Token",
                          "X-Amz-User-Agent",
                          "X-Amzn-Trace-Id"
                        ],
                        "allowCredentials": "<REDACTED>"
                      },
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "name": "api-soporte-dev-ListarSolicitudes",
                "package": {},
                "memory": 1024,
                "timeout": 30,
                "runtime": "python3.12",
                "vpc": {},
                "versionLogicalId": "ListarSolicitudesLambdaVersionRjF7JsCdhQHCHSAydcmmvwLfxtK76OHZ39KSNMDhsw"
              },
              "ListarSolicitudesPorUsuario": {
                "handler": "ListarSolicitudesPorUsuario.lambda_handler",
                "events": [
                  {
                    "http": {
                      "path": "soporte/listar-usuario",
                      "method": "post",
                      "cors": {
                        "origin": "*",
                        "methods": [
                          "OPTIONS",
                          "POST"
                        ],
                        "headers": [
                          "Content-Type",
                          "X-Amz-Date",
                          "Authorization",
                          "X-Api-Key",
                          "X-Amz-Security-Token",
                          "X-Amz-User-Agent",
                          "X-Amzn-Trace-Id"
                        ],
                        "allowCredentials": "<REDACTED>"
                      },
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "name": "api-soporte-dev-ListarSolicitudesPorUsuario",
                "package": {},
                "memory": 1024,
                "timeout": 30,
                "runtime": "python3.12",
                "vpc": {},
                "versionLogicalId": "ListarSolicitudesPorUsuarioLambdaVersionHD5FLbdgrXlqLLS3N5f4F1yUeIgvJm6iv7a0auS0iXo"
              },
              "ResponderSolicitud": {
                "handler": "ResponderSolicitud.lambda_handler",
                "events": [
                  {
                    "http": {
                      "path": "soporte/responder",
                      "method": "post",
                      "cors": {
                        "origin": "*",
                        "methods": [
                          "OPTIONS",
                          "POST"
                        ],
                        "headers": [
                          "Content-Type",
                          "X-Amz-Date",
                          "Authorization",
                          "X-Api-Key",
                          "X-Amz-Security-Token",
                          "X-Amz-User-Agent",
                          "X-Amzn-Trace-Id"
                        ],
                        "allowCredentials": "<REDACTED>"
                      },
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "name": "api-soporte-dev-ResponderSolicitud",
                "package": {},
                "memory": 1024,
                "timeout": 30,
                "runtime": "python3.12",
                "vpc": {},
                "versionLogicalId": "ResponderSolicitudLambdaVersionELBl7Tnl2QcCHYMpNOD2mpyUxGAJXtQYtnVrFuHgDo"
              }
            },
            "resources": {
              "Resources": {
                "SoporteTable": {
                  "Type": "AWS::DynamoDB::Table",
                  "Properties": {
                    "TableName": "TABLA-SOPORTE",
                    "AttributeDefinitions": [
                      {
                        "AttributeName": "usuario_id",
                        "AttributeType": "S"
                      },
                      {
                        "AttributeName": "ticket_id",
                        "AttributeType": "S"
                      },
                      {
                        "AttributeName": "estado",
                        "AttributeType": "S"
                      },
                      {
                        "AttributeName": "fecha",
                        "AttributeType": "S"
                      }
                    ],
                    "KeySchema": [
                      {
                        "AttributeName": "usuario_id",
                        "KeyType": "HASH"
                      },
                      {
                        "AttributeName": "ticket_id",
                        "KeyType": "RANGE"
                      }
                    ],
                    "BillingMode": "PAY_PER_REQUEST",
                    "GlobalSecondaryIndexes": [
                      {
                        "IndexName": "estado-index",
                        "KeySchema": [
                          {
                            "AttributeName": "estado",
                            "KeyType": "HASH"
                          },
                          {
                            "AttributeName": "fecha",
                            "KeyType": "RANGE"
                          }
                        ],
                        "Projection": {
                          "ProjectionType": "ALL"
                        }
                      }
                    ]
                  }
                }
              },
              "Outputs": {}
            }
          },
          "configFileDirPath": "/home/ubuntu/Proyecto-2-BANCO-Cloud/TABLA-SOPORTE",
          "config": {
            "type": "sls"
          },
          "options": {},
          "stage": "dev",
          "dashboard": null,
          "logger": {
            "namespace": "s:core:resolver:sls",
            "prefix": null,
            "prefixColor": null
          },
          "_credentialsPromise": "<REDACTED>"
        },
        "resolvers": {}
      }
    },
    "composeServiceName": null,
    "servicePath": "/home/ubuntu/Proyecto-2-BANCO-Cloud/TABLA-SOPORTE",
    "serviceConfigFileName": "serverless.yml",
    "service": {
      "org": "antoniocot",
      "service": "api-soporte",
      "provider": {
        "name": "aws",
        "runtime": "python3.12",
        "memorySize": 1024,
        "timeout": 30,
        "iam": {
          "role": "arn:aws:iam::316129865556:role/LabRole"
        },
        "environment": {
          "SOPORTE_TABLE": "TABLA-SOPORTE"
        },
        "stage": "dev",
        "region": "us-east-1",
        "versionFunctions": true,
        "compiledCloudFormationTemplate": {
          "AWSTemplateFormatVersion": "2010-09-09",
          "Description": "The AWS CloudFormation template for this Serverless application",
          "Resources": {
            "CrearSolicitudLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/api-soporte-dev-CrearSolicitud"
              }
            },
            "EliminarSolicitudLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/api-soporte-dev-EliminarSolicitud"
              }
            },
            "EditarSolicitudLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/api-soporte-dev-EditarSolicitud"
              }
            },
            "ObtenerSolicitudLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/api-soporte-dev-ObtenerSolicitud"
              }
            },
            "ListarSolicitudesLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/api-soporte-dev-ListarSolicitudes"
              }
            },
            "ListarSolicitudesPorUsuarioLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/api-soporte-dev-ListarSolicitudesPorUsuario"
              }
            },
            "ResponderSolicitudLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/api-soporte-dev-ResponderSolicitud"
              }
            },
            "CrearSolicitudLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-us-east-1-3b51566d-90f3",
                  "S3Key": "serverless/api-soporte/dev/1732024147230-2024-11-19T13:49:07.230Z/api-soporte.zip"
                },
                "Handler": "CrearSolicitud.lambda_handler",
                "Runtime": "python3.12",
                "FunctionName": "api-soporte-dev-CrearSolicitud",
                "MemorySize": 1024,
                "Timeout": 30,
                "Environment": {
                  "Variables": {
                    "SOPORTE_TABLE": "TABLA-SOPORTE"
                  }
                },
                "Role": "arn:aws:iam::316129865556:role/LabRole"
              },
              "DependsOn": [
                "CrearSolicitudLogGroup"
              ]
            },
            "EliminarSolicitudLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-us-east-1-3b51566d-90f3",
                  "S3Key": "serverless/api-soporte/dev/1732024147230-2024-11-19T13:49:07.230Z/api-soporte.zip"
                },
                "Handler": "EliminarSolicitud.lambda_handler",
                "Runtime": "python3.12",
                "FunctionName": "api-soporte-dev-EliminarSolicitud",
                "MemorySize": 1024,
                "Timeout": 30,
                "Environment": {
                  "Variables": {
                    "SOPORTE_TABLE": "TABLA-SOPORTE"
                  }
                },
                "Role": "arn:aws:iam::316129865556:role/LabRole"
              },
              "DependsOn": [
                "EliminarSolicitudLogGroup"
              ]
            },
            "EditarSolicitudLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-us-east-1-3b51566d-90f3",
                  "S3Key": "serverless/api-soporte/dev/1732024147230-2024-11-19T13:49:07.230Z/api-soporte.zip"
                },
                "Handler": "EditarSolicitud.lambda_handler",
                "Runtime": "python3.12",
                "FunctionName": "api-soporte-dev-EditarSolicitud",
                "MemorySize": 1024,
                "Timeout": 30,
                "Environment": {
                  "Variables": {
                    "SOPORTE_TABLE": "TABLA-SOPORTE"
                  }
                },
                "Role": "arn:aws:iam::316129865556:role/LabRole"
              },
              "DependsOn": [
                "EditarSolicitudLogGroup"
              ]
            },
            "ObtenerSolicitudLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-us-east-1-3b51566d-90f3",
                  "S3Key": "serverless/api-soporte/dev/1732024147230-2024-11-19T13:49:07.230Z/api-soporte.zip"
                },
                "Handler": "ObtenerSolicitud.lambda_handler",
                "Runtime": "python3.12",
                "FunctionName": "api-soporte-dev-ObtenerSolicitud",
                "MemorySize": 1024,
                "Timeout": 30,
                "Environment": {
                  "Variables": {
                    "SOPORTE_TABLE": "TABLA-SOPORTE"
                  }
                },
                "Role": "arn:aws:iam::316129865556:role/LabRole"
              },
              "DependsOn": [
                "ObtenerSolicitudLogGroup"
              ]
            },
            "ListarSolicitudesLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-us-east-1-3b51566d-90f3",
                  "S3Key": "serverless/api-soporte/dev/1732024147230-2024-11-19T13:49:07.230Z/api-soporte.zip"
                },
                "Handler": "ListarSolicitudes.lambda_handler",
                "Runtime": "python3.12",
                "FunctionName": "api-soporte-dev-ListarSolicitudes",
                "MemorySize": 1024,
                "Timeout": 30,
                "Environment": {
                  "Variables": {
                    "SOPORTE_TABLE": "TABLA-SOPORTE"
                  }
                },
                "Role": "arn:aws:iam::316129865556:role/LabRole"
              },
              "DependsOn": [
                "ListarSolicitudesLogGroup"
              ]
            },
            "ListarSolicitudesPorUsuarioLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-us-east-1-3b51566d-90f3",
                  "S3Key": "serverless/api-soporte/dev/1732024147230-2024-11-19T13:49:07.230Z/api-soporte.zip"
                },
                "Handler": "ListarSolicitudesPorUsuario.lambda_handler",
                "Runtime": "python3.12",
                "FunctionName": "api-soporte-dev-ListarSolicitudesPorUsuario",
                "MemorySize": 1024,
                "Timeout": 30,
                "Environment": {
                  "Variables": {
                    "SOPORTE_TABLE": "TABLA-SOPORTE"
                  }
                },
                "Role": "arn:aws:iam::316129865556:role/LabRole"
              },
              "DependsOn": [
                "ListarSolicitudesPorUsuarioLogGroup"
              ]
            },
            "ResponderSolicitudLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-us-east-1-3b51566d-90f3",
                  "S3Key": "serverless/api-soporte/dev/1732024147230-2024-11-19T13:49:07.230Z/api-soporte.zip"
                },
                "Handler": "ResponderSolicitud.lambda_handler",
                "Runtime": "python3.12",
                "FunctionName": "api-soporte-dev-ResponderSolicitud",
                "MemorySize": 1024,
                "Timeout": 30,
                "Environment": {
                  "Variables": {
                    "SOPORTE_TABLE": "TABLA-SOPORTE"
                  }
                },
                "Role": "arn:aws:iam::316129865556:role/LabRole"
              },
              "DependsOn": [
                "ResponderSolicitudLogGroup"
              ]
            },
            "CrearSolicitudLambdaVersionPWFqvyY9KakyOhhY8nXUz0rPoUsl7NSskNbyBExomE": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "CrearSolicitudLambdaFunction"
                },
                "CodeSha256": "t5lcz7QWStXQInZEDBUrPNDzXUBA/XkGefXQqZRBBrc="
              }
            },
            "EliminarSolicitudLambdaVersion6VXv70xeC0YEeb1ZVix253CYYdt8MRwzNFuzqey3qRU": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "EliminarSolicitudLambdaFunction"
                },
                "CodeSha256": "t5lcz7QWStXQInZEDBUrPNDzXUBA/XkGefXQqZRBBrc="
              }
            },
            "EditarSolicitudLambdaVersionYJJpP4qFq9nA1bpbHGtaQeFq3yFmlGlnyFec0XWHM": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "EditarSolicitudLambdaFunction"
                },
                "CodeSha256": "t5lcz7QWStXQInZEDBUrPNDzXUBA/XkGefXQqZRBBrc="
              }
            },
            "ObtenerSolicitudLambdaVersionGhICUB83NpRqpBupPsySUlmCmigjv7FFvmTmlfQ": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "ObtenerSolicitudLambdaFunction"
                },
                "CodeSha256": "t5lcz7QWStXQInZEDBUrPNDzXUBA/XkGefXQqZRBBrc="
              }
            },
            "ListarSolicitudesLambdaVersionRjF7JsCdhQHCHSAydcmmvwLfxtK76OHZ39KSNMDhsw": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "ListarSolicitudesLambdaFunction"
                },
                "CodeSha256": "t5lcz7QWStXQInZEDBUrPNDzXUBA/XkGefXQqZRBBrc="
              }
            },
            "ListarSolicitudesPorUsuarioLambdaVersionHD5FLbdgrXlqLLS3N5f4F1yUeIgvJm6iv7a0auS0iXo": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "ListarSolicitudesPorUsuarioLambdaFunction"
                },
                "CodeSha256": "t5lcz7QWStXQInZEDBUrPNDzXUBA/XkGefXQqZRBBrc="
              }
            },
            "ResponderSolicitudLambdaVersionELBl7Tnl2QcCHYMpNOD2mpyUxGAJXtQYtnVrFuHgDo": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "ResponderSolicitudLambdaFunction"
                },
                "CodeSha256": "t5lcz7QWStXQInZEDBUrPNDzXUBA/XkGefXQqZRBBrc="
              }
            },
            "ApiGatewayRestApi": {
              "Type": "AWS::ApiGateway::RestApi",
              "Properties": {
                "Name": "dev-api-soporte",
                "EndpointConfiguration": {
                  "Types": [
                    "EDGE"
                  ]
                },
                "Policy": ""
              }
            },
            "ApiGatewayResourceSoporte": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Fn::GetAtt": [
                    "ApiGatewayRestApi",
                    "RootResourceId"
                  ]
                },
                "PathPart": "soporte",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayResourceSoporteCrear": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Ref": "ApiGatewayResourceSoporte"
                },
                "PathPart": "crear",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayResourceSoporteEliminar": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Ref": "ApiGatewayResourceSoporte"
                },
                "PathPart": "eliminar",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayResourceSoporteEditar": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Ref": "ApiGatewayResourceSoporte"
                },
                "PathPart": "editar",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayResourceSoporteObtener": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Ref": "ApiGatewayResourceSoporte"
                },
                "PathPart": "obtener",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayResourceSoporteListar": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Ref": "ApiGatewayResourceSoporte"
                },
                "PathPart": "listar",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayResourceSoporteListarDashusuario": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Ref": "ApiGatewayResourceSoporte"
                },
                "PathPart": "listar-usuario",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayResourceSoporteResponder": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Ref": "ApiGatewayResourceSoporte"
                },
                "PathPart": "responder",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayMethodSoporteCrearOptions": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "AuthorizationType": "NONE",
                "HttpMethod": "OPTIONS",
                "MethodResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": true,
                      "method.response.header.Access-Control-Allow-Headers": true,
                      "method.response.header.Access-Control-Allow-Methods": true
                    },
                    "ResponseModels": {}
                  }
                ],
                "RequestParameters": {},
                "Integration": {
                  "Type": "MOCK",
                  "RequestTemplates": {
                    "application/json": "{statusCode:200}"
                  },
                  "ContentHandling": "CONVERT_TO_TEXT",
                  "IntegrationResponses": [
                    {
                      "StatusCode": "200",
                      "ResponseParameters": {
                        "method.response.header.Access-Control-Allow-Origin": "'*'",
                        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
                      },
                      "ResponseTemplates": {
                        "application/json": ""
                      }
                    }
                  ]
                },
                "ResourceId": {
                  "Ref": "ApiGatewayResourceSoporteCrear"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayMethodSoporteEliminarOptions": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "AuthorizationType": "NONE",
                "HttpMethod": "OPTIONS",
                "MethodResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": true,
                      "method.response.header.Access-Control-Allow-Headers": true,
                      "method.response.header.Access-Control-Allow-Methods": true
                    },
                    "ResponseModels": {}
                  }
                ],
                "RequestParameters": {},
                "Integration": {
                  "Type": "MOCK",
                  "RequestTemplates": {
                    "application/json": "{statusCode:200}"
                  },
                  "ContentHandling": "CONVERT_TO_TEXT",
                  "IntegrationResponses": [
                    {
                      "StatusCode": "200",
                      "ResponseParameters": {
                        "method.response.header.Access-Control-Allow-Origin": "'*'",
                        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,DELETE'"
                      },
                      "ResponseTemplates": {
                        "application/json": ""
                      }
                    }
                  ]
                },
                "ResourceId": {
                  "Ref": "ApiGatewayResourceSoporteEliminar"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayMethodSoporteEditarOptions": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "AuthorizationType": "NONE",
                "HttpMethod": "OPTIONS",
                "MethodResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": true,
                      "method.response.header.Access-Control-Allow-Headers": true,
                      "method.response.header.Access-Control-Allow-Methods": true
                    },
                    "ResponseModels": {}
                  }
                ],
                "RequestParameters": {},
                "Integration": {
                  "Type": "MOCK",
                  "RequestTemplates": {
                    "application/json": "{statusCode:200}"
                  },
                  "ContentHandling": "CONVERT_TO_TEXT",
                  "IntegrationResponses": [
                    {
                      "StatusCode": "200",
                      "ResponseParameters": {
                        "method.response.header.Access-Control-Allow-Origin": "'*'",
                        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,PUT'"
                      },
                      "ResponseTemplates": {
                        "application/json": ""
                      }
                    }
                  ]
                },
                "ResourceId": {
                  "Ref": "ApiGatewayResourceSoporteEditar"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayMethodSoporteObtenerOptions": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "AuthorizationType": "NONE",
                "HttpMethod": "OPTIONS",
                "MethodResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": true,
                      "method.response.header.Access-Control-Allow-Headers": true,
                      "method.response.header.Access-Control-Allow-Methods": true
                    },
                    "ResponseModels": {}
                  }
                ],
                "RequestParameters": {},
                "Integration": {
                  "Type": "MOCK",
                  "RequestTemplates": {
                    "application/json": "{statusCode:200}"
                  },
                  "ContentHandling": "CONVERT_TO_TEXT",
                  "IntegrationResponses": [
                    {
                      "StatusCode": "200",
                      "ResponseParameters": {
                        "method.response.header.Access-Control-Allow-Origin": "'*'",
                        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
                      },
                      "ResponseTemplates": {
                        "application/json": ""
                      }
                    }
                  ]
                },
                "ResourceId": {
                  "Ref": "ApiGatewayResourceSoporteObtener"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayMethodSoporteListarOptions": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "AuthorizationType": "NONE",
                "HttpMethod": "OPTIONS",
                "MethodResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": true,
                      "method.response.header.Access-Control-Allow-Headers": true,
                      "method.response.header.Access-Control-Allow-Methods": true
                    },
                    "ResponseModels": {}
                  }
                ],
                "RequestParameters": {},
                "Integration": {
                  "Type": "MOCK",
                  "RequestTemplates": {
                    "application/json": "{statusCode:200}"
                  },
                  "ContentHandling": "CONVERT_TO_TEXT",
                  "IntegrationResponses": [
                    {
                      "StatusCode": "200",
                      "ResponseParameters": {
                        "method.response.header.Access-Control-Allow-Origin": "'*'",
                        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
                      },
                      "ResponseTemplates": {
                        "application/json": ""
                      }
                    }
                  ]
                },
                "ResourceId": {
                  "Ref": "ApiGatewayResourceSoporteListar"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayMethodSoporteListarDashusuarioOptions": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "AuthorizationType": "NONE",
                "HttpMethod": "OPTIONS",
                "MethodResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": true,
                      "method.response.header.Access-Control-Allow-Headers": true,
                      "method.response.header.Access-Control-Allow-Methods": true
                    },
                    "ResponseModels": {}
                  }
                ],
                "RequestParameters": {},
                "Integration": {
                  "Type": "MOCK",
                  "RequestTemplates": {
                    "application/json": "{statusCode:200}"
                  },
                  "ContentHandling": "CONVERT_TO_TEXT",
                  "IntegrationResponses": [
                    {
                      "StatusCode": "200",
                      "ResponseParameters": {
                        "method.response.header.Access-Control-Allow-Origin": "'*'",
                        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
                      },
                      "ResponseTemplates": {
                        "application/json": ""
                      }
                    }
                  ]
                },
                "ResourceId": {
                  "Ref": "ApiGatewayResourceSoporteListarDashusuario"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayMethodSoporteResponderOptions": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "AuthorizationType": "NONE",
                "HttpMethod": "OPTIONS",
                "MethodResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": true,
                      "method.response.header.Access-Control-Allow-Headers": true,
                      "method.response.header.Access-Control-Allow-Methods": true
                    },
                    "ResponseModels": {}
                  }
                ],
                "RequestParameters": {},
                "Integration": {
                  "Type": "MOCK",
                  "RequestTemplates": {
                    "application/json": "{statusCode:200}"
                  },
                  "ContentHandling": "CONVERT_TO_TEXT",
                  "IntegrationResponses": [
                    {
                      "StatusCode": "200",
                      "ResponseParameters": {
                        "method.response.header.Access-Control-Allow-Origin": "'*'",
                        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
                      },
                      "ResponseTemplates": {
                        "application/json": ""
                      }
                    }
                  ]
                },
                "ResourceId": {
                  "Ref": "ApiGatewayResourceSoporteResponder"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayMethodSoporteCrearPost": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "POST",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourceSoporteCrear"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "CrearSolicitudLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "CrearSolicitudLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayMethodSoporteEliminarDelete": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "DELETE",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourceSoporteEliminar"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "EliminarSolicitudLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "EliminarSolicitudLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayMethodSoporteEditarPut": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "PUT",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourceSoporteEditar"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "EditarSolicitudLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "EditarSolicitudLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayMethodSoporteObtenerPost": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "POST",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourceSoporteObtener"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "ObtenerSolicitudLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "ObtenerSolicitudLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayMethodSoporteListarPost": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "POST",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourceSoporteListar"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "ListarSolicitudesLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "ListarSolicitudesLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayMethodSoporteListarDashusuarioPost": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "POST",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourceSoporteListarDashusuario"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "ListarSolicitudesPorUsuarioLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "ListarSolicitudesPorUsuarioLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayMethodSoporteResponderPost": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "POST",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourceSoporteResponder"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "ResponderSolicitudLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "ResponderSolicitudLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayDeployment1732024143912": {
              "Type": "AWS::ApiGateway::Deployment",
              "Properties": {
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "StageName": "dev"
              },
              "DependsOn": [
                "ApiGatewayMethodSoporteCrearOptions",
                "ApiGatewayMethodSoporteEliminarOptions",
                "ApiGatewayMethodSoporteEditarOptions",
                "ApiGatewayMethodSoporteObtenerOptions",
                "ApiGatewayMethodSoporteListarOptions",
                "ApiGatewayMethodSoporteListarDashusuarioOptions",
                "ApiGatewayMethodSoporteResponderOptions",
                "ApiGatewayMethodSoporteCrearPost",
                "ApiGatewayMethodSoporteEliminarDelete",
                "ApiGatewayMethodSoporteEditarPut",
                "ApiGatewayMethodSoporteObtenerPost",
                "ApiGatewayMethodSoporteListarPost",
                "ApiGatewayMethodSoporteListarDashusuarioPost",
                "ApiGatewayMethodSoporteResponderPost"
              ]
            },
            "CrearSolicitudLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "CrearSolicitudLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            },
            "EliminarSolicitudLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "EliminarSolicitudLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            },
            "EditarSolicitudLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "EditarSolicitudLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            },
            "ObtenerSolicitudLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "ObtenerSolicitudLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            },
            "ListarSolicitudesLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "ListarSolicitudesLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            },
            "ListarSolicitudesPorUsuarioLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "ListarSolicitudesPorUsuarioLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            },
            "ResponderSolicitudLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "ResponderSolicitudLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            },
            "SoporteTable": {
              "Type": "AWS::DynamoDB::Table",
              "Properties": {
                "TableName": "TABLA-SOPORTE",
                "AttributeDefinitions": [
                  {
                    "AttributeName": "usuario_id",
                    "AttributeType": "S"
                  },
                  {
                    "AttributeName": "ticket_id",
                    "AttributeType": "S"
                  },
                  {
                    "AttributeName": "estado",
                    "AttributeType": "S"
                  },
                  {
                    "AttributeName": "fecha",
                    "AttributeType": "S"
                  }
                ],
                "KeySchema": [
                  {
                    "AttributeName": "usuario_id",
                    "KeyType": "HASH"
                  },
                  {
                    "AttributeName": "ticket_id",
                    "KeyType": "RANGE"
                  }
                ],
                "BillingMode": "PAY_PER_REQUEST",
                "GlobalSecondaryIndexes": [
                  {
                    "IndexName": "estado-index",
                    "KeySchema": [
                      {
                        "AttributeName": "estado",
                        "KeyType": "HASH"
                      },
                      {
                        "AttributeName": "fecha",
                        "KeyType": "RANGE"
                      }
                    ],
                    "Projection": {
                      "ProjectionType": "ALL"
                    }
                  }
                ]
              }
            }
          },
          "Outputs": {
            "ServerlessDeploymentBucketName": {
              "Value": "serverless-framework-deployments-us-east-1-3b51566d-90f3",
              "Export": {
                "Name": "sls-api-soporte-dev-ServerlessDeploymentBucketName"
              }
            },
            "CrearSolicitudLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "CrearSolicitudLambdaVersionPWFqvyY9KakyOhhY8nXUz0rPoUsl7NSskNbyBExomE"
              },
              "Export": {
                "Name": "sls-api-soporte-dev-CrearSolicitudLambdaFunctionQualifiedArn"
              }
            },
            "EliminarSolicitudLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "EliminarSolicitudLambdaVersion6VXv70xeC0YEeb1ZVix253CYYdt8MRwzNFuzqey3qRU"
              },
              "Export": {
                "Name": "sls-api-soporte-dev-EliminarSolicitudLambdaFunctionQualifiedArn"
              }
            },
            "EditarSolicitudLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "EditarSolicitudLambdaVersionYJJpP4qFq9nA1bpbHGtaQeFq3yFmlGlnyFec0XWHM"
              },
              "Export": {
                "Name": "sls-api-soporte-dev-EditarSolicitudLambdaFunctionQualifiedArn"
              }
            },
            "ObtenerSolicitudLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "ObtenerSolicitudLambdaVersionGhICUB83NpRqpBupPsySUlmCmigjv7FFvmTmlfQ"
              },
              "Export": {
                "Name": "sls-api-soporte-dev-ObtenerSolicitudLambdaFunctionQualifiedArn"
              }
            },
            "ListarSolicitudesLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "ListarSolicitudesLambdaVersionRjF7JsCdhQHCHSAydcmmvwLfxtK76OHZ39KSNMDhsw"
              },
              "Export": {
                "Name": "sls-api-soporte-dev-ListarSolicitudesLambdaFunctionQualifiedArn"
              }
            },
            "ListarSolicitudesPorUsuarioLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "ListarSolicitudesPorUsuarioLambdaVersionHD5FLbdgrXlqLLS3N5f4F1yUeIgvJm6iv7a0auS0iXo"
              },
              "Export": {
                "Name": "sls-api-soporte-dev-ListarSolicitudesPorUsuarioLambdaFunctionQualifiedArn"
              }
            },
            "ResponderSolicitudLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "ResponderSolicitudLambdaVersionELBl7Tnl2QcCHYMpNOD2mpyUxGAJXtQYtnVrFuHgDo"
              },
              "Export": {
                "Name": "sls-api-soporte-dev-ResponderSolicitudLambdaFunctionQualifiedArn"
              }
            },
            "ServiceEndpoint": {
              "Description": "URL of the service endpoint",
              "Value": {
                "Fn::Join": [
                  "",
                  [
                    "https://",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    ".execute-api.",
                    {
                      "Ref": "AWS::Region"
                    },
                    ".",
                    {
                      "Ref": "AWS::URLSuffix"
                    },
                    "/dev"
                  ]
                ]
              },
              "Export": {
                "Name": "sls-api-soporte-dev-ServiceEndpoint"
              }
            }
          }
        },
        "vpc": {}
      },
      "functions": {
        "CrearSolicitud": {
          "handler": "CrearSolicitud.lambda_handler",
          "events": [
            {
              "http": {
                "path": "soporte/crear",
                "method": "post",
                "cors": {
                  "origin": "*",
                  "methods": [
                    "OPTIONS",
                    "POST"
                  ],
                  "headers": [
                    "Content-Type",
                    "X-Amz-Date",
                    "Authorization",
                    "X-Api-Key",
                    "X-Amz-Security-Token",
                    "X-Amz-User-Agent",
                    "X-Amzn-Trace-Id"
                  ],
                  "allowCredentials": "<REDACTED>"
                },
                "integration": "AWS_PROXY"
              }
            }
          ],
          "name": "api-soporte-dev-CrearSolicitud",
          "package": {},
          "memory": 1024,
          "timeout": 30,
          "runtime": "python3.12",
          "vpc": {},
          "versionLogicalId": "CrearSolicitudLambdaVersionPWFqvyY9KakyOhhY8nXUz0rPoUsl7NSskNbyBExomE"
        },
        "EliminarSolicitud": {
          "handler": "EliminarSolicitud.lambda_handler",
          "events": [
            {
              "http": {
                "path": "soporte/eliminar",
                "method": "delete",
                "cors": {
                  "origin": "*",
                  "methods": [
                    "OPTIONS",
                    "DELETE"
                  ],
                  "headers": [
                    "Content-Type",
                    "X-Amz-Date",
                    "Authorization",
                    "X-Api-Key",
                    "X-Amz-Security-Token",
                    "X-Amz-User-Agent",
                    "X-Amzn-Trace-Id"
                  ],
                  "allowCredentials": "<REDACTED>"
                },
                "integration": "AWS_PROXY"
              }
            }
          ],
          "name": "api-soporte-dev-EliminarSolicitud",
          "package": {},
          "memory": 1024,
          "timeout": 30,
          "runtime": "python3.12",
          "vpc": {},
          "versionLogicalId": "EliminarSolicitudLambdaVersion6VXv70xeC0YEeb1ZVix253CYYdt8MRwzNFuzqey3qRU"
        },
        "EditarSolicitud": {
          "handler": "EditarSolicitud.lambda_handler",
          "events": [
            {
              "http": {
                "path": "soporte/editar",
                "method": "put",
                "cors": {
                  "origin": "*",
                  "methods": [
                    "OPTIONS",
                    "PUT"
                  ],
                  "headers": [
                    "Content-Type",
                    "X-Amz-Date",
                    "Authorization",
                    "X-Api-Key",
                    "X-Amz-Security-Token",
                    "X-Amz-User-Agent",
                    "X-Amzn-Trace-Id"
                  ],
                  "allowCredentials": "<REDACTED>"
                },
                "integration": "AWS_PROXY"
              }
            }
          ],
          "name": "api-soporte-dev-EditarSolicitud",
          "package": {},
          "memory": 1024,
          "timeout": 30,
          "runtime": "python3.12",
          "vpc": {},
          "versionLogicalId": "EditarSolicitudLambdaVersionYJJpP4qFq9nA1bpbHGtaQeFq3yFmlGlnyFec0XWHM"
        },
        "ObtenerSolicitud": {
          "handler": "ObtenerSolicitud.lambda_handler",
          "events": [
            {
              "http": {
                "path": "soporte/obtener",
                "method": "post",
                "cors": {
                  "origin": "*",
                  "methods": [
                    "OPTIONS",
                    "POST"
                  ],
                  "headers": [
                    "Content-Type",
                    "X-Amz-Date",
                    "Authorization",
                    "X-Api-Key",
                    "X-Amz-Security-Token",
                    "X-Amz-User-Agent",
                    "X-Amzn-Trace-Id"
                  ],
                  "allowCredentials": "<REDACTED>"
                },
                "integration": "AWS_PROXY"
              }
            }
          ],
          "name": "api-soporte-dev-ObtenerSolicitud",
          "package": {},
          "memory": 1024,
          "timeout": 30,
          "runtime": "python3.12",
          "vpc": {},
          "versionLogicalId": "ObtenerSolicitudLambdaVersionGhICUB83NpRqpBupPsySUlmCmigjv7FFvmTmlfQ"
        },
        "ListarSolicitudes": {
          "handler": "ListarSolicitudes.lambda_handler",
          "events": [
            {
              "http": {
                "path": "soporte/listar",
                "method": "post",
                "cors": {
                  "origin": "*",
                  "methods": [
                    "OPTIONS",
                    "POST"
                  ],
                  "headers": [
                    "Content-Type",
                    "X-Amz-Date",
                    "Authorization",
                    "X-Api-Key",
                    "X-Amz-Security-Token",
                    "X-Amz-User-Agent",
                    "X-Amzn-Trace-Id"
                  ],
                  "allowCredentials": "<REDACTED>"
                },
                "integration": "AWS_PROXY"
              }
            }
          ],
          "name": "api-soporte-dev-ListarSolicitudes",
          "package": {},
          "memory": 1024,
          "timeout": 30,
          "runtime": "python3.12",
          "vpc": {},
          "versionLogicalId": "ListarSolicitudesLambdaVersionRjF7JsCdhQHCHSAydcmmvwLfxtK76OHZ39KSNMDhsw"
        },
        "ListarSolicitudesPorUsuario": {
          "handler": "ListarSolicitudesPorUsuario.lambda_handler",
          "events": [
            {
              "http": {
                "path": "soporte/listar-usuario",
                "method": "post",
                "cors": {
                  "origin": "*",
                  "methods": [
                    "OPTIONS",
                    "POST"
                  ],
                  "headers": [
                    "Content-Type",
                    "X-Amz-Date",
                    "Authorization",
                    "X-Api-Key",
                    "X-Amz-Security-Token",
                    "X-Amz-User-Agent",
                    "X-Amzn-Trace-Id"
                  ],
                  "allowCredentials": "<REDACTED>"
                },
                "integration": "AWS_PROXY"
              }
            }
          ],
          "name": "api-soporte-dev-ListarSolicitudesPorUsuario",
          "package": {},
          "memory": 1024,
          "timeout": 30,
          "runtime": "python3.12",
          "vpc": {},
          "versionLogicalId": "ListarSolicitudesPorUsuarioLambdaVersionHD5FLbdgrXlqLLS3N5f4F1yUeIgvJm6iv7a0auS0iXo"
        },
        "ResponderSolicitud": {
          "handler": "ResponderSolicitud.lambda_handler",
          "events": [
            {
              "http": {
                "path": "soporte/responder",
                "method": "post",
                "cors": {
                  "origin": "*",
                  "methods": [
                    "OPTIONS",
                    "POST"
                  ],
                  "headers": [
                    "Content-Type",
                    "X-Amz-Date",
                    "Authorization",
                    "X-Api-Key",
                    "X-Amz-Security-Token",
                    "X-Amz-User-Agent",
                    "X-Amzn-Trace-Id"
                  ],
                  "allowCredentials": "<REDACTED>"
                },
                "integration": "AWS_PROXY"
              }
            }
          ],
          "name": "api-soporte-dev-ResponderSolicitud",
          "package": {},
          "memory": 1024,
          "timeout": 30,
          "runtime": "python3.12",
          "vpc": {},
          "versionLogicalId": "ResponderSolicitudLambdaVersionELBl7Tnl2QcCHYMpNOD2mpyUxGAJXtQYtnVrFuHgDo"
        }
      },
      "resources": {
        "Resources": {
          "SoporteTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "TableName": "TABLA-SOPORTE",
              "AttributeDefinitions": [
                {
                  "AttributeName": "usuario_id",
                  "AttributeType": "S"
                },
                {
                  "AttributeName": "ticket_id",
                  "AttributeType": "S"
                },
                {
                  "AttributeName": "estado",
                  "AttributeType": "S"
                },
                {
                  "AttributeName": "fecha",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "usuario_id",
                  "KeyType": "HASH"
                },
                {
                  "AttributeName": "ticket_id",
                  "KeyType": "RANGE"
                }
              ],
              "BillingMode": "PAY_PER_REQUEST",
              "GlobalSecondaryIndexes": [
                {
                  "IndexName": "estado-index",
                  "KeySchema": [
                    {
                      "AttributeName": "estado",
                      "KeyType": "HASH"
                    },
                    {
                      "AttributeName": "fecha",
                      "KeyType": "RANGE"
                    }
                  ],
                  "Projection": {
                    "ProjectionType": "ALL"
                  }
                }
              ]
            }
          }
        },
        "Outputs": {}
      }
    },
    "serviceRawFile": "org: antoniocot\nservice: api-soporte\n\nprovider:\n  name: aws\n  runtime: python3.12\n  memorySize: 1024\n  timeout: 30\n  iam:\n    role: arn:aws:iam::316129865556:role/LabRole\n  environment:\n    SOPORTE_TABLE: TABLA-SOPORTE\n\nfunctions:\n  CrearSolicitud:\n    handler: CrearSolicitud.lambda_handler\n    events:\n      - http:\n          path: /soporte/crear\n          method: post\n          cors: true\n\n  EliminarSolicitud:\n    handler: EliminarSolicitud.lambda_handler\n    events:\n      - http:\n          path: /soporte/eliminar\n          method: delete\n          cors: true\n\n  EditarSolicitud:\n    handler: EditarSolicitud.lambda_handler\n    events:\n      - http:\n          path: /soporte/editar\n          method: put\n          cors: true\n\n  ObtenerSolicitud:\n    handler: ObtenerSolicitud.lambda_handler\n    events:\n      - http:\n          path: /soporte/obtener\n          method: post\n          cors: true\n\n  ListarSolicitudes:\n    handler: ListarSolicitudes.lambda_handler\n    events:\n      - http:\n          path: /soporte/listar\n          method: post\n          cors: true\n\n  ListarSolicitudesPorUsuario:\n    handler: ListarSolicitudesPorUsuario.lambda_handler\n    events:\n      - http:\n          path: /soporte/listar-usuario\n          method: post\n          cors: true\n\n  ResponderSolicitud:\n    handler: ResponderSolicitud.lambda_handler\n    events:\n      - http:\n          path: /soporte/responder\n          method: post\n          cors: true\n\nresources:\n  Resources:\n    SoporteTable:\n      Type: AWS::DynamoDB::Table\n      Properties:\n        TableName: ${self:provider.environment.SOPORTE_TABLE}\n        AttributeDefinitions:\n          - AttributeName: usuario_id\n            AttributeType: S\n          - AttributeName: ticket_id\n            AttributeType: S\n          - AttributeName: estado\n            AttributeType: S\n          - AttributeName: fecha\n            AttributeType: S\n        KeySchema:\n          - AttributeName: usuario_id\n            KeyType: HASH\n          - AttributeName: ticket_id\n            KeyType: RANGE\n        BillingMode: PAY_PER_REQUEST\n        GlobalSecondaryIndexes:\n          - IndexName: estado-index\n            KeySchema:\n              - AttributeName: estado\n                KeyType: HASH\n              - AttributeName: fecha\n                KeyType: RANGE\n            Projection:\n              ProjectionType: ALL\n",
    "command": [
      "deploy"
    ],
    "options": {},
    "error": null,
    "params": {},
    "machineId": "1a17178cb52deea2b46ae6a73b4b98d9",
    "stage": "dev",
    "accessKeyV2": "<REDACTED>",
    "accessKeyV1": "<REDACTED>",
    "orgId": "2e99066c-18f4-402b-a9fe-2e7dad52eb58",
    "orgName": "antoniocot",
    "userId": "ybR6NRF6kxQTq0WCR2",
    "dashboard": {
      "isEnabledForService": false,
      "requiredAuthentication": false,
      "orgFeaturesInUse": null,
      "orgObservabilityIntegrations": null,
      "serviceAppId": null,
      "serviceProvider": null,
      "instanceParameters": null
    },
    "userName": "antoniocot",
    "subscription": null,
    "userEmail": "antonio.cotera@utec.edu.pe",
    "serviceProviderAwsRegion": "us-east-1",
    "serviceProviderAwsCredentials": "<REDACTED>",
    "serviceProviderAwsAccountId": "316129865556",
    "projectType": "traditional",
    "versionSf": "4.4.10",
    "serviceProviderAwsCfStackName": "api-soporte-dev",
    "integrations": {},
    "serviceUniqueId": "arn:aws:cloudformation:us-east-1:316129865556:stack/api-soporte-dev/8f3574f0-a36e-11ef-bf11-12e2e0cdf7d7",
    "serviceProviderAwsCfStackId": "arn:aws:cloudformation:us-east-1:316129865556:stack/api-soporte-dev/8f3574f0-a36e-11ef-bf11-12e2e0cdf7d7",
    "serviceProviderAwsCfStackCreated": "2024-11-15T16:27:51.742Z",
    "serviceProviderAwsCfStackUpdated": "2024-11-19T13:49:09.159Z",
    "serviceProviderAwsCfStackStatus": "UPDATE_COMPLETE",
    "serviceProviderAwsCfStackOutputs": [
      {
        "OutputKey": "ListarSolicitudesLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:us-east-1:316129865556:function:api-soporte-dev-ListarSolicitudes:20",
        "Description": "Current Lambda function version",
        "ExportName": "sls-api-soporte-dev-ListarSolicitudesLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "CrearSolicitudLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:us-east-1:316129865556:function:api-soporte-dev-CrearSolicitud:20",
        "Description": "Current Lambda function version",
        "ExportName": "sls-api-soporte-dev-CrearSolicitudLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "EditarSolicitudLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:us-east-1:316129865556:function:api-soporte-dev-EditarSolicitud:20",
        "Description": "Current Lambda function version",
        "ExportName": "sls-api-soporte-dev-EditarSolicitudLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "ListarSolicitudesPorUsuarioLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:us-east-1:316129865556:function:api-soporte-dev-ListarSolicitudesPorUsuario:20",
        "Description": "Current Lambda function version",
        "ExportName": "sls-api-soporte-dev-ListarSolicitudesPorUsuarioLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "ObtenerSolicitudLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:us-east-1:316129865556:function:api-soporte-dev-ObtenerSolicitud:20",
        "Description": "Current Lambda function version",
        "ExportName": "sls-api-soporte-dev-ObtenerSolicitudLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "ResponderSolicitudLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:us-east-1:316129865556:function:api-soporte-dev-ResponderSolicitud:20",
        "Description": "Current Lambda function version",
        "ExportName": "sls-api-soporte-dev-ResponderSolicitudLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "EliminarSolicitudLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:us-east-1:316129865556:function:api-soporte-dev-EliminarSolicitud:20",
        "Description": "Current Lambda function version",
        "ExportName": "sls-api-soporte-dev-EliminarSolicitudLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "ServiceEndpoint",
        "OutputValue": "https://on7ysj1462.execute-api.us-east-1.amazonaws.com/dev",
        "Description": "URL of the service endpoint",
        "ExportName": "sls-api-soporte-dev-ServiceEndpoint"
      },
      {
        "OutputKey": "ServerlessDeploymentBucketName",
        "OutputValue": "serverless-framework-deployments-us-east-1-3b51566d-90f3",
        "ExportName": "sls-api-soporte-dev-ServerlessDeploymentBucketName"
      }
    ]
  }
}